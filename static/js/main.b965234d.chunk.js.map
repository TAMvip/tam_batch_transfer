{"version":3,"sources":["dapp/connectors.ts","config/constants/chainId.ts","utils/rpc.ts","utils/providers.ts","hooks/useActiveWeb3React.ts","components/Header.tsx","dapp/hooks.ts","config/constants/contracts.ts","config/constants/defaultChainId.ts","utils/addressHelpers.ts","utils/address.ts","hooks/useContract.ts","utils/index.ts","utils/formatBalance.ts","config/tokens/index.ts","config/constants/native.ts","utils/isEth.ts","hooks/useBatchTransfer.ts","page/BatchTransfer.tsx","page/ProBatchTransfer.tsx","utils/number.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["injected","InjectedConnector","supportedChainIds","connectorLocalStorageKey","ChainId","RPC","Mainnet","Rinkeby","Kovan","BSC","BSCTestnet","simpleRpcProvider","chainId","StaticJsonRpcProvider","useActiveWeb3React","useWeb3React","library","web3React","refEth","useRef","defaultChainId","parseInt","useState","provider","setProvider","useEffect","current","Header","connector","account","activate","deactivate","activatingConnector","setActivatingConnector","undefined","triedEager","active","tried","setTried","isAuthorized","then","hasSignedIn","window","localStorage","getItem","catch","useEagerConnect","suppress","error","ethereum","on","handleConnect","console","log","handleChainChanged","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","useInactiveListener","getAccount","useMemo","substring","className","onClick","setItem","type","icon","SearchOutlined","String","multiTransfer","getMultiTransferAddress","address","getAddress","addresses","isAddress","value","useERC20","withSignerIfPossible","useContract","bep20Abi","ABI","AddressZero","getContract","useBep20TransferContract","bep20TransferAbi","Error","Contract","getSigner","connectUnchecked","getProviderOrSigner","parseAmount","amount","decimal","split","cleanupAmount","wholePart","fracPart","trimLeadingZeroes","padEnd","formatAmount","amountBN","BigNumber","wholeStr","toString","fractionStr","padStart","trimTrailingZeroes","replace","trim","toFixed","number","pp","num","isNaN","p","n","str","test","Number","getFullNum","x","substr","Array","join","accMul","arg1","arg2","times","accAdd","plus","TOKENLIST","bsc","rinkeby","kovan","bscTestnet","NATIVE","name","symbol","decimals","logoURI","isEth","token","native","toLowerCase","useAllowance","to","isApproved","setIsApproved","bep20Contract","getAllowance","a","allowance","response","gt","useBalance","bnbBalance","setBalance","tokenBalance","setTokenBalance","getBalance","balance","balanceOf","useTransferFee","fee","setFee","bep20TransferContract","getTransferFee","Option","Select","TextArea","Input","SetInfo","prop","addressList","setAmount","setToken","tokenList","addressInput","setAddressInput","setTokenList","setAddressList","setStep","searchValue","setSearchValue","getErc20Info","findIndex","item","errAddressList","err","forEach","index","push","map","bordered","size","showSearch","optionLabelProp","dropdownClassName","filterOption","e","currentItem","find","toLocaleLowerCase","includes","onSearch","placeholder","onChange","target","rows","style","width","height","message","TransferDetail","filterInput","filter","toAddressList","tableList","key","allAmount","loading","setLoading","allFee","setAllFee","errorMessage","setErrorMessage","getGasPrice","gasPrice","tokenAmount","estimateGas","transferEth","gasRes","transferToken","reason","data","useTransferGasFee","columns","title","dataIndex","render","record","text","danger","_addressList","splice","dataSource","pagination","scroll","y","ArrowLeftOutlined","tx","wait","success","setTimeout","history","go","approve","MaxUint256","BatchTransfer","setp","handleAddressList","handleStep","step","handleAddressInput","DEFAULT_TOKEN_LIST","_tokenList","sort","t1","t2","match","checkNumber","tokenAmountList","arr","parseFloat","transferProEth","transferProToken","ethers","utils","parseUnits","useProTransferGasFee","getLibrary","Web3Provider","pollingInterval","APP","path","exact","component","ProBatchTransfer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"83YAGaA,EAAW,IAAIC,IAAkB,CAC5CC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,KAAM,SAEpDC,EAA2B,c,mBCN5BC,E,mDAAAA,O,qBAAAA,I,qBAAAA,I,qBAAAA,I,mBAAAA,I,4CAAAA,I,oBAAAA,I,mCAAAA,I,kBAAAA,I,cAAAA,I,4BAAAA,I,iBAAAA,I,qBAAAA,I,+BAAAA,I,uBAAAA,I,mBAAAA,I,iCAAAA,I,4BAAAA,I,0BAAAA,I,uBAAAA,I,2BAAAA,I,yBAAAA,I,uCAAAA,I,4BAAAA,I,yBAAAA,I,qBAAAA,I,6BAAAA,I,wBAAAA,I,oCAAAA,I,mCAAAA,I,yBAAAA,I,kCAAAA,I,wBAAAA,I,2BAAAA,I,2CAAAA,M,KCCZ,IAQeC,GARN,mBACND,EAAQE,QAAU,iEADZ,cAENF,EAAQG,QAAU,iEAFZ,cAGNH,EAAQI,MAAQ,+DAHV,cAINJ,EAAQK,IAAM,qCAJR,cAKNL,EAAQM,WAAa,kDALf,GCOIC,EAJK,SAACC,GACjB,OAAO,IAAIC,IAAsBR,EAAIO,GAAWP,EAAIO,GAAWP,EAAID,EAAQG,W,wBCoB9DO,EAfY,WACzB,MAA2CC,cAAnCC,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,QAAYK,EAA7B,iBACMC,EAASC,iBAAOH,GAChBI,EAAc,OAAGR,QAAH,IAAGA,IAAWS,SAAS,IAAK,IAChD,EAAgCC,mBAASN,GAAWL,EAAkBS,IAAtE,mBAAOG,EAAP,KAAiBC,EAAjB,KAQA,OAPAC,qBAAU,WACJT,IAAYE,EAAOQ,UACrBF,EAAYR,GAAWL,EAAkBS,IACzCF,EAAOQ,QAAUV,KAElB,CAACA,IAEG,aAAEA,QAASO,EAAUX,QAASQ,GAAmBH,I,QCd3C,SAASU,IACtB,MAA8Db,IAAtDc,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASjB,EAA5B,EAA4BA,QAASkB,EAArC,EAAqCA,SAAUC,EAA/C,EAA+CA,WAC/C,EAAsDT,qBAAtD,mBAAOU,EAAP,KAA4BC,EAA5B,KACAR,qBAAU,WACJO,GAAuBA,IAAwBJ,GACjDK,OAAuBC,KAExB,CAACF,EAAqBJ,IAEzB,IAAMO,ECZD,WACL,MAA6BpB,cAArBe,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,OAElB,EAA0Bd,oBAAS,GAAnC,mBAAOe,EAAP,KAAcC,EAAd,KA4BA,OA1BAb,qBAAU,WACRzB,EAASuC,eAAeC,MAAK,SAACD,GAC5B,IAAME,EAAcC,OAAOC,aAAaC,QAAQzC,GAC5CoC,GAAgBE,EAClBX,EAAS9B,OAAUkC,GAAW,GAAMW,OAAM,WACxCP,GAAS,MASXA,GAAS,QAGZ,IAGHb,qBAAU,YACHY,GAASD,GACZE,GAAS,KAEV,CAACD,EAAOD,IAEJC,EDnBYS,ICqBd,WAAgD,IAAnBC,EAAkB,wDACpD,EAAoChC,cAA5BqB,EAAR,EAAQA,OAAQY,EAAhB,EAAgBA,MAAOlB,EAAvB,EAAuBA,SAEvBL,qBAAU,WACR,IAAQwB,EAAaP,OAAbO,SACR,GAAIA,GAAYA,EAASC,KAAOd,IAAWY,IAAUD,EAAU,CAC7D,IAAMI,EAAgB,WACpBC,QAAQC,IAAI,4BACZvB,EAAS9B,IAELsD,EAAqB,SAAC1C,GAC1BwC,QAAQC,IAAI,6CAA8CzC,GAC1DkB,EAAS9B,IAELuD,EAAwB,SAACC,GAC7BJ,QAAQC,IAAI,gDAAiDG,GACzDA,EAASC,OAAS,GACpB3B,EAAS9B,IAGP0D,EAAuB,SAACC,GAC5BP,QAAQC,IAAI,+CAAgDM,GAC5D7B,EAAS9B,IAQX,OALAiD,EAASC,GAAG,UAAWC,GACvBF,EAASC,GAAG,eAAgBI,GAC5BL,EAASC,GAAG,kBAAmBK,GAC/BN,EAASC,GAAG,iBAAkBQ,GAEvB,WACDT,EAASW,iBACXX,EAASW,eAAe,UAAWT,GACnCF,EAASW,eAAe,eAAgBN,GACxCL,EAASW,eAAe,kBAAmBL,GAC3CN,EAASW,eAAe,iBAAkBF,QAI/C,CAACtB,EAAQY,EAAOD,EAAUjB,ID1D7B+B,EAAqB1B,KAAgBH,GAErC,IAAM8B,EAAaC,mBAAQ,WACzB,OAAIlC,EACKA,EAAQmC,UAAU,EAAG,GAAK,MAAQnC,EAAQmC,UAAUnC,EAAQ4B,OAAS,GAAI5B,EAAQ4B,QAEnF,KACN,CAAC5B,IACJ,OACE,8BACE,qBAAKoC,UAAU,oCAAf,SACE,8BACGpC,EACC,cAAC,IAAD,CACEqC,QAAS,WACPnC,IACAY,aAAawB,QAAQhE,EAA0B,KAEjDiE,KAAK,UACLC,KAAM,cAACC,EAAA,EAAD,IANR,SAQGR,IAGH,cAAC,IAAD,CACEI,QAAS,WACPpC,EAAS9B,GACT2C,aAAawB,QAAQhE,EAA0BoE,OAAO3D,KAExDwD,KAAK,UACLC,KAAM,cAACC,EAAA,EAAD,IANR,kC,yGEzCG,GACbE,eAAa,mBACVpE,EAAQK,IAAM,8CADJ,cAEVL,EAAQM,WAAa,8CAFX,cAGVN,EAAQG,QAAU,8CAHR,cAIVH,EAAQI,MAAQ,8CAJN,ICDAJ,IAAf,QCMaqE,EAA0B,SAAC7D,GACtC,OALwB,SAAC8D,EAAkB9D,GAC3C,OAAO8D,EAAQ9D,GAAW8D,EAAQ9D,GAAW8D,EAAQtD,GAI9CuD,CAAWC,EAAUJ,cAAe5D,I,0BCPtC,SAASiE,EAAUC,GACxB,IACE,OAAOH,YAAWG,GAClB,SACA,OAAO,GCKJ,IAAMC,EAAW,SAACL,GAAkD,IAAjCM,IAAgC,yDACxE,OAAOC,EAAYP,EAASQ,EAAUF,IAOjC,SAASC,EAAYP,EAA6BS,GAAyD,IAA/CH,IAA8C,yDAC/G,EAA6BlE,IAArBE,EAAR,EAAQA,QAASa,EAAjB,EAAiBA,QACjB,OAAOkC,mBAAQ,WACb,IAAKW,GAAWA,IAAYU,MAAgBD,IAAQnE,EAAS,OAAO,KACpE,IACE,OAAOqE,EAAYX,EAASS,EAAKnE,EAASgE,GAAwBnD,EAAUA,OAAUK,GACtF,MAAOc,GAEP,OADAI,QAAQJ,MAAM,yBAA0BA,GACjC,QAER,CAAC0B,EAASS,EAAKnE,EAASgE,EAAsBnD,IAG5C,SAASyD,EAAyBN,GACvC,IAAQpE,EAAYE,IAAZF,QACR,OAAOqE,EAAYR,EAAwB7D,GAAU2E,EAAkBP,GAIlE,SAASK,EAAYX,EAAiBS,EAAUnE,EAAuBa,GAC5E,IAAKgD,EAAUH,IAAYA,IAAYU,IACrC,MAAMI,MAAM,gCAAD,OAAiCd,EAAjC,OAEb,OAAO,IAAIe,IAASf,EAASS,ECpCxB,SAA6BnE,EAAuBa,GACzD,OAAOA,EALF,SAAmBb,EAAuBa,GAC/C,OAAOb,EAAQ0E,UAAU7D,GAAS8D,mBAIjBD,CAAU1E,EAASa,GAAWb,EDmCb4E,CAAoB5E,EAASa,I,qBExC1D,SAASgE,EAAYC,GAA+B,IAAfC,EAAc,uDAAJ,GACpD,IAAKD,EAAQ,MAAO,IAIpB,IAAME,GAFNF,EAASG,GAAcH,IAEFE,MAAM,KACrBE,EAAYF,EAAM,GAClBG,EAAWH,EAAM,IAAM,GAC7B,GAAIA,EAAMvC,OAAS,GAAK0C,EAAS1C,OAASsC,EACxC,MAAM,IAAIP,MAAJ,wBAA2BM,EAA3B,mBAER,OAAOM,GAAkBF,EAAYC,EAASE,OAAON,EAAS,MAEzD,SAASO,GAAaR,GAA+B,IAAfC,EAAc,uDAAJ,GACrD,IAAKD,EAAQ,MAAO,IAEpB,IAAMS,EAAW,IAAIC,IAAUV,EAAQ,IAEjCW,GADNX,EAASS,EAASG,SAAS,KACH1C,UAAU,EAAG8B,EAAOrC,OAASsC,IAAY,IAC3DY,EAAcb,EACjB9B,UAAU8B,EAAOrC,OAASsC,GAC1Ba,SAASb,EAAS,KAClB/B,UAAU,EAAG+B,GAEhB,OAAOc,GAAmB,GAAD,OAAIJ,EAAJ,YAAgBE,IAGpC,SAASV,GAAcH,GAC5B,OAAOA,EAAOgB,QAAQ,KAAM,IAAIC,OAG3B,SAASF,GAAmB/B,GACjC,OAAOA,EAAMgC,QAAQ,SAAU,IAG1B,SAASV,GAAkBtB,GAEhC,MAAc,MADdA,EAAQA,EAAMgC,QAAQ,MAAO,KAEpB,IAEFhC,EAWF,SAASkC,GAAQC,EAAQC,GAC9B,IAAIC,EAAMC,MAAMH,KAAYA,EAAS,EAAIA,EACnCI,EAAID,MAAMF,KAAQA,EAAK,EAAIA,EAE3BI,IADNH,EAkBK,SAAoBA,GAEzB,GAAIC,MAAMD,GACR,OAAOA,EAET,IAAMI,EAAMhD,OAAO4C,GACnB,IAAK,KAAKK,KAAKD,GACb,OAAOJ,EAET,OAAOM,OAAON,GACXH,QAAQ,IACRF,QAAQ,SAAU,IA7BfY,CAAWP,IACA,IAAInB,MAAM,KACvB2B,EAAIL,EAAE7D,OAAS,EAAI6D,EAAE,GAAK,GAM9B,OALIK,EAAElE,OAAS4D,EACbM,EAAIA,EAAEC,OAAO,EAAGP,GAEhBM,GAAKE,MAAMR,EAAIM,EAAElE,OAAS,GAAGqE,KAAK,KAE7BR,EAAE,IAAW,IAALK,EAAU,GAAK,IAAMA,GAE/B,SAASI,GAAOC,EAAMC,GAC3B,OAAKD,GAASC,EAGF,IAAIzB,IAAUwB,GAAME,MAAM,IAAI1B,IAAUyB,IACzCvB,WAHF,IA4BJ,SAASyB,GAAOH,EAAcC,GAEnC,OADY,IAAIzB,IAAUwB,GAAMI,KAAK,IAAI5B,IAAUyB,IACxCjB,U,2DClFEqB,IAPW,qBACvBjI,EAAQK,IAAM6H,IADS,eAEvBlI,EAAQG,QAAUgI,IAFK,eAGvBnI,EAAQI,MAAQgI,IAHO,eAIvBpI,EAAQM,WAAa+H,IAJE,ICNbC,IAAiB,qBAC3BtI,EAAQK,IAAM,CACbkI,KAAM,YACNC,OAAQ,MACRlE,QAAS,GACT9D,QAASR,EAAQK,IACjBoI,SAAU,GACVC,QAAS,kGAPiB,eAS3B1I,EAAQG,QAAU,CACjBoI,KAAM,YACNC,OAAQ,MACRlE,QAAS,GACT9D,QAASR,EAAQG,QACjBsI,SAAU,GACVC,QAAS,kGAfiB,eAiB3B1I,EAAQI,MAAQ,CACfmI,KAAM,YACNC,OAAQ,MACRlE,QAAS,GACT9D,QAASR,EAAQI,MACjBqI,SAAU,GACVC,QAAS,kGAvBiB,eAyB3B1I,EAAQM,WAAa,CACpBiI,KAAM,YACNC,OAAQ,MACRlE,QAAS,GACT9D,QAASR,EAAQM,WACjBmI,SAAU,GACVC,QAAS,kGA/BiB,ICDjBC,GAAQ,SAACC,EAAcpI,GAClC,IAAMqI,EAASP,GAAO9H,GACtB,SAAIqI,GAAUD,EAAMtE,UAAYuE,EAAOvE,SAAWsE,EAAMJ,OAAOM,gBAAkBD,EAAOL,OAAOM,gB,UCMpFC,GAAe,SAACH,EAAcnH,EAAiBuH,GAC1D,IAAQxI,EAAYE,IAAZF,QAER,EAAoCU,oBAAkB,GAAtD,mBAAO+H,EAAP,KAAmBC,EAAnB,KACMC,EAAgBxE,EAASiE,EAAMtE,SAE/B8E,EAAY,uCAAG,4BAAAC,EAAA,yDACd5H,EADc,qDAIfkH,GAAMC,EAAOpI,GAJE,uBAKjB0I,GAAc,GALG,0CAQIC,EAAcG,UAAU7H,EAASuH,GARrC,OAQbO,EARa,OASnBL,GJsFkBtB,EItFE2B,EAASjD,WJsFGuB,EItFS,IJuFpC,IAAIzB,IAAUwB,GAAM4B,GAAG,IAAIpD,IAAUyB,MIhGvB,iCJ+FhB,IAAeD,EAAcC,II/Fb,OAAH,qDAelB,OAJAxG,qBAAU,WACR+H,MACC,CAAC3H,IAEG,CAAEwH,aAAYG,iBAGVK,GAAa,SAACb,EAAcnH,GACvC,MAA6Bf,IAArBE,EAAR,EAAQA,QAASJ,EAAjB,EAAiBA,QACjB,EAAiCU,mBAAiB,KAAlD,mBAAOwI,EAAP,KAAmBC,EAAnB,KACA,EAAwCzI,mBAAiB,KAAzD,mBAAO0I,EAAP,KAAqBC,EAArB,KACMV,EAAgBxE,EAASiE,EAAMtE,SAE/BwF,EAAU,uCAAG,8BAAAT,EAAA,yDACZ5H,EADY,iEAIKb,EAAQkJ,WAAWrI,GAJxB,UAIXsI,EAJW,OAKjBJ,EAAWI,EAAQzD,aACfqC,GAAMC,EAAOpI,GANA,iBAQfqJ,EADqBE,EACQzD,YARd,yCAUY6C,EAAca,UAAUvI,GAVpC,QAUTmI,EAVS,OAWfC,EAAgBD,EAAatD,YAXd,4CAAH,qDAkBhB,OAJAjF,qBAAU,WACRyI,MACC,CAACrI,IAEG,CAAEiI,aAAYE,eAAcE,eAGxBG,GAAiB,WAC5B,MAAsB/I,mBAAiB,IAAvC,mBAAOgJ,EAAP,KAAYC,EAAZ,KACMC,EAAwBlF,IAExBmF,EAAc,uCAAG,4BAAAhB,EAAA,sEACEe,EAAsBF,MADxB,OACfX,EADe,OAErBY,EAAOZ,EAASjD,YAFK,2CAAH,qDASpB,OAJAjF,qBAAU,WACRgJ,MACC,IAEI,CAAEH,QCxDHI,GAAWC,IAAXD,OACAE,GAAaC,IAAbD,SAsBR,SAASE,GAAQC,GACf,MAA6BjK,IAArBe,EAAR,EAAQA,QAASjB,EAAjB,EAAiBA,QACTkF,EAAqIiF,EAArIjF,OAAQkF,EAA6HD,EAA7HC,YAAahC,EAAgH+B,EAAhH/B,MAAOiC,EAAyGF,EAAzGE,UAAWC,EAA8FH,EAA9FG,SAAUC,EAAoFJ,EAApFI,UAAWC,EAAyEL,EAAzEK,aAAcC,EAA2DN,EAA3DM,gBAAiBC,EAA0CP,EAA1CO,aAAcC,EAA4BR,EAA5BQ,eAAgBC,EAAYT,EAAZS,QACjI,EAAsClK,mBAAiB,IAAvD,mBAAOmK,EAAP,KAAoBC,EAApB,KAEMhH,EAAUX,mBAAQ,WACtB,OAAOc,EAAU4G,GAAeA,EAAc,KAC7C,CAACA,IAEElC,EAAgBxE,EAASL,GAAS,GAExCjD,qBAAU,WACR,IAAMkK,EAAY,uCAAG,kCAAAlC,EAAA,0DACfF,EADe,8BAIA,IADD4B,EAAUS,WAAU,SAACC,GAAD,OAAUA,EAAKnH,UAAYG,EAAU4G,MAHxD,iEAOMlC,EAAcX,SAPpB,cAOTA,EAPS,iBAQIW,EAAcZ,OARlB,eAQTA,EARS,iBASQY,EAAcV,WATtB,QASTA,EATS,OAUTG,EAAQ,CAAEJ,SAAQD,OAAME,SAAUA,EAASnC,WAAYhC,UAAS9D,WACtE0K,EAAa,GAAD,mBAAKH,GAAL,CAAgBnC,KAXb,4GAAH,qDAiBlB2C,MACC,CAACpC,IAEJ,IAAMuC,EAAiB/H,mBAAQ,WAC7B,IAAMgI,EAAM,GAMZ,OALAf,EAAYgB,SAAQ,SAACH,EAAMI,GACrBpH,EAAUgH,KAAUA,GAAiB,KAATA,GAC9BE,EAAIG,KAAK,CAAExH,QAASmH,EAAMI,aAGvBF,EAAItI,OACT,qBAAKQ,UAAU,+DAAf,SACG8H,EAAII,KAAI,SAACN,GACR,OACE,qBAAsB5H,UAAU,GAAhC,SACE,yCACI4H,EAAKI,MAAQ,EADjB,UACsBJ,EAAKnH,QAD3B,0EADQmH,EAAKI,YAQnB,OACH,CAACjB,IAEJ,OACE,gCACE,sBAAK/G,UAAU,qBAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,qBAAKA,UAAU,8BAAf,sCACA,cAAC,IAAD,CACEmI,UAAU,EACVC,KAAK,QACLC,YAAU,EACVC,gBAAgB,WAChBC,kBAAkB,cAClBC,aAAc,SAACC,EAAGC,GAChB,IAAM3D,EAAQmC,EAAUyB,MAAK,SAACf,GAAD,OAAUA,EAAKnH,UAAYiI,EAAY7H,SAC9D2G,EAAciB,EAAEG,oBACtB,SACE7D,EAAMJ,OAAOiE,oBAAoBC,SAASrB,IAC1CzC,EAAML,KAAKkE,oBAAoBC,SAASrB,IACxCzC,EAAMtE,QAAQmI,oBAAoBC,SAASrB,KAM/CsB,SAAU,SAACL,GACThB,EAAegB,IAEjBM,YAAY,qBACZlI,MAAO,CAAEA,MAAOkE,EAAMtE,SACtBT,UAAU,qBACVgJ,SAAU,SAACvI,GACTwG,EAASC,EAAUyB,MAAK,SAACf,GAAD,OAAUA,EAAKnH,UAAYA,OAzBvD,SA4BGyG,EAAU1H,QACT0H,EAAUgB,KAAI,SAACN,EAAMI,GACnB,OACE,cAACvB,GAAD,CAAqD5F,MAAO+G,EAAKnH,QAAjE,SACE,sBAAKT,UAAU,GAAf,UACE,sBAAMA,UAAU,eAAhB,SAAgC4H,EAAKjD,SADvC,IACsD,sBAAM3E,UAAU,OAAhB,eACnD4H,EAAKnH,QAAUmH,EAAKnH,QAAUmH,EAAKlD,SAH3BkD,EAAKnH,QAAUmH,EAAKlD,KAAOkD,EAAKjD,gBAUvD,sBAAK3E,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,0BACA,qBAAKA,UAAU,4BAAf,SAA4C+E,EAAMH,iBAGtD,gCACE,qBAAK5E,UAAU,iBAAf,sCACA,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,YAAf,cAA6B+G,EAAYvH,OAASuH,EAAYmB,KAAI,SAACN,EAAMI,GAAP,OAAiB,8BAAkBA,EAAQ,GAAhBA,MAA4B,KACzH,cAACrB,GAAD,CACE3G,UAAU,UACVmI,UAAU,EACVtH,MAAOsG,EACP6B,SAAU,SAACP,GAET,GADArB,EAAgBqB,EAAEQ,OAAOpI,OACH,IAAlB4H,EAAEQ,OAAOpI,MAAb,CAIA,IAAMkG,EAAc0B,EAAEQ,OAAOpI,MAAMkB,MAAM,MACzCuF,EAAeP,QAJbO,EAAe,KAMnB4B,KAAM,UAIXrB,EAED,sBAAK7H,UAAU,GAAf,UACE,sBAAKA,UAAU,yCAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,kDACA,cAAC,IAAD,CACEa,MAAOgB,EACPmH,SAAU,SAACP,GACTzB,EAAUyB,EAAEQ,OAAOpI,QAErBb,UAAU,cACVmJ,MAAO,CAAEC,MAAO,SAChBjB,UAAU,IAEZ,qBAAKnI,UAAU,iBAAf,SAAiC+E,EAAMJ,YAEzC,qBACE3E,UAAU,+BACVmJ,MAAO,CAAEE,OAAQ,QACjBpJ,QAAS,WACPmH,EAAgB,8CAChBE,EAAe,CAAC,gDALpB,yCAWF,mHAEE,cAAC,IAAD,CAAMnC,GAAG,OAAT,SACE,sBAAMnF,UAAU,0CAAhB,yCAKN,cAAC,IAAD,CACEG,KAAK,UACLH,UAAU,OACVC,QAAS,WACFrC,EAIL2J,EAAQ,GAHN+B,IAAQvK,MAAM,yCALpB,mCAiBN,SAASwK,GAAezC,GAAwB,IAAD,MAC7C,EAA6BjK,IAArBe,EAAR,EAAQA,QAASjB,EAAjB,EAAiBA,QACTkF,EAAyEiF,EAAzEjF,OAAQkF,EAAiED,EAAjEC,YAAahC,EAAoD+B,EAApD/B,MAAOuC,EAA6CR,EAA7CQ,eAAgBF,EAA6BN,EAA7BM,gBAAiBG,EAAYT,EAAZS,QAErE,EAAgDzH,mBAAQ,WACtD,IAAM0J,EAAczC,EAAY0C,QAAO,SAAC7B,GACtC,MAAgB,KAATA,KAGH8B,EAAgB,GAChBC,EAAY,GAMlB,OALAH,EAAYzB,SAAQ,SAACH,EAAMI,GACzB0B,EAAczB,KAAKL,GACnB+B,EAAU1B,KAAV,yBAAiB9C,GAAIyC,EAAM/F,UAAWkD,GAAtC,IAA6C6E,IAAK5B,QAG7C,CAAE6B,UADG/F,GAAOlC,EAAYC,EAAQkD,EAAMH,UAAW8E,EAAclK,QAClDmK,YAAWD,mBAC9B,CAAC3C,IAbI8C,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,UAAWD,EAA9B,EAA8BA,cAe9B,EAA8BrM,oBAAkB,GAAhD,mBAAOyM,EAAP,KAAgBC,EAAhB,KACQ1D,EAAQD,KAARC,IACR,EAAqCnB,GAAaH,EAAOnH,EAAS4C,EAAwB7D,IAAlFyI,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,aACpB,EAAiDK,GAAWb,EAAOnH,GAA3DiI,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,aAAcE,EAAlC,EAAkCA,WAClC,ED5J+B,SAAC,GAAkF,IAAhFlB,EAA+E,EAA/EA,MAAOK,EAAwE,EAAxEA,WAAYvD,EAA4D,EAA5DA,OAAQ6H,EAAoD,EAApDA,cAAeG,EAAqC,EAArCA,UAAWxD,EAA0B,EAA1BA,IACvF,EAAsCxJ,IAA9Be,EAAR,EAAQA,QAASjB,EAAjB,EAAiBA,QAASI,EAA1B,EAA0BA,QAC1B,EAA4BM,mBAAiB,KAA7C,mBAAO2M,EAAP,KAAeC,EAAf,KACA,EAAwC5M,mBAAiB,IAAzD,mBAAO6M,EAAP,KAAqBC,EAArB,KACM5D,EAAwBlF,IACxBmF,EAAc,uCAAG,0CAAAhB,EAAA,yDAChB5H,EADgB,oDAIhBwH,EAJgB,oDAOT,KAARiB,EAPiB,0EAWItJ,EAAQqN,cAXZ,UAWbC,EAXa,OAabC,EAAc1I,EAAYC,EAAQkD,EAAMH,WAC1CE,GAAMC,EAAOpI,GAdE,kCAeI4J,EAAsBgE,YAAYC,YAAYd,EAAeY,EAAa,CAC7FzJ,MAAOqD,GAAO2F,EAAWxD,KAhBV,QAeXoE,EAfW,OAkBXT,EAAS9F,GAAOJ,GAAOuG,EAAS5H,WAAYgI,EAAOhI,YAAa4D,GACtE4D,EAAUD,GAnBO,yCAqBIzD,EAAsBgE,YAAYG,cAAc3F,EAAMtE,QAASiJ,EAAeY,EAAa,CAC9GzJ,MAAOwF,IAtBQ,QAqBXoE,EArBW,OAwBXT,EAAS9F,GAAOJ,GAAOuG,EAAS5H,WAAYgI,EAAOhI,YAAa4D,GACtE4D,EAAUD,GAzBO,QA2BnBG,EAAgB,IA3BG,kDA6BnBF,EAAU5D,GACV8D,GAAgB,eAAUpL,aAAV,eAAiBuK,UAAW,KAAUqB,SAAtC,UAAgD,KAAUC,YAA1D,aAAgD,EAAgBtB,UAAW,KAAUA,SA9BlF,0DAAH,qDAsCpB,OAJA9L,qBAAU,WACRgJ,MACC,CAAC5I,EAASwH,EAAYiB,EAAKqD,IAEvB,CAAEM,SAAQE,gBCiHgBW,CAAkB,CAAE9F,QAAOK,aAAYvD,SAAQ6H,gBAAeG,YAAWxD,QAAlG2D,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,aACV5E,EAAgBxE,EAASiE,EAAMtE,SAC/B8F,EAAwBlF,IACxByJ,EAAU,CACd,CACEC,MAAO,2BACPC,UAAW,KACXpB,IAAK,MAEP,CACEmB,MAAO,eACPC,UAAW,SACXpB,IAAK,SACLR,MAAO,MACP6B,OAAQ,SAACpJ,EAAaqJ,GAAd,OACN,gCACGrJ,EADH,IACYqJ,EAAOvG,YAIvB,CACEyE,MAAO,MACP2B,MAAO,eACPnB,IAAK,SACLqB,OAAQ,SAACE,EAAWD,GAAZ,OACN,cAAC,IAAD,CACEE,QAAM,EACNnL,QAAS,WACP,IAAMoL,EAAY,YAAOtE,GACzBsE,EAAaC,OAAOJ,EAAOtB,IAAK,GAChCtC,EAAe+D,GACfjE,EAAgBiE,EAAaxH,KAAK,QANtC,6BAcN,OACE,gCACE,sBAAK7D,UAAU,oBAAf,UACE,qBAAKA,UAAU,iBAAf,sCACA,cAAC,IAAD,CAAO8K,QAASA,EAASS,WAAY5B,EAAW6B,YAAY,EAAOC,OAAQ,CAAEC,EAAG,UAElF,gCACE,qBAAK1L,UAAU,iBAAf,0BACA,sBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,YAAf,UACE,8BAAM2J,EAAUnK,SAChB,8DAEF,sBAAKQ,UAAU,YAAf,UACE,gCACG+C,GAAQV,GAAawH,EAAW9E,EAAMH,UAAW,GADpD,IACyDG,EAAMJ,UAE/D,0EAEF,sBAAK3E,UAAU,YAAf,UACE,8BAAM2J,EAAUnK,SAChB,8DAEF,sBAAKQ,UAAU,YAAf,UACE,gCACG+C,GAAQV,GAAa0D,EAAchB,EAAMH,UAAW,GADvD,IAC4DG,EAAMJ,UAElE,8DAEF,sBAAK3E,UAAU,YAAf,UACE,gCACGqC,GAAa2H,GADhB,cAC0BvF,GAAO9H,UADjC,aAC0B,EAAiBgI,UAF7C,uEAIgBtC,GAAagE,GAJ7B,cAIoC5B,GAAO9H,UAJ3C,aAIoC,EAAiBgI,OAJrD,OAMA,sBAAK3E,UAAU,YAAf,UACE,gCACG+C,GAAQV,GAAawD,GAAa,GADrC,cAC0CpB,GAAO9H,UADjD,aAC0C,EAAiBgI,UAE3D,oEAIN,qBAAK3E,UAAU,eAAf,SAA+BkK,IAC/B,sBAAKlK,UAAU,YAAf,UACE,cAAC,IAAD,CACEG,KAAK,UACLF,QAAS,WACPsH,EAAQ,IAEVvH,UAAU,OACVI,KAAM,cAACuL,EAAA,EAAD,MAGPvG,EACC,cAAC,IAAD,CACEjF,KAAK,UACL2J,QAASA,EACT7J,QAAO,sBAAE,gCAAAuF,EAAA,kEAGLuE,GAAW,GACLO,EAAc1I,EAAYC,EAAQkD,EAAMH,WAC1CE,GAAMC,EAAOpI,GALZ,gCAMQ4J,EAAsBiE,YAAYd,EAAeY,EAAY7H,WAAY,CAClF5B,MAAOqD,GAAO2F,EAAWxD,KAPxB,OAMHuF,EANG,+CAUQrF,EAAsBmE,cAAc3F,EAAMtE,QAASiJ,EAAeY,EAAY7H,WAAY,CACnG5B,MAAOwF,IAXN,QAUHuF,EAVG,gCAcCA,EAAGC,OAdJ,QAeL9B,GAAW,GACX9D,IACAqD,IAAQwC,QAAQ,4BAChBC,YAAW,WACTC,QAAQC,OACP,GApBE,kDAsBL3C,IAAQvK,MAAM,KAAU4L,SAAV,UAAoB,KAAUC,YAA9B,aAAoB,EAAgBtB,UAAW,KAAUA,SACvES,GAAW,GAvBN,0DAHX,0BAiCA,cAAC,IAAD,CACE5J,KAAK,UACL2J,QAASA,EACT7J,QAAO,sBAAE,8BAAAuF,EAAA,sEAELuE,GAAW,GAFN,SAGYzE,EAAc4G,QAAQ1L,EAAwB7D,GAAUwP,MAHpE,cAGCP,EAHD,gBAIiBA,EAAGC,OAJpB,cAKL9B,GAAW,GACXxE,IACAU,IACAqD,IAAQwC,QAAQ,4BARX,kDAULxC,IAAQvK,MAAM,KAAU4L,SAAV,UAAoB,KAAUC,YAA9B,aAAoB,EAAgBtB,UAAW,KAAUA,SACvES,GAAW,GAXN,0DAHX,gCA0BK,SAASqC,KACtB,IAAQzP,EAAYE,IAAZF,QACR,EAAwBU,mBAAiB,GAAzC,mBAAOgP,EAAP,KAAa9E,EAAb,KACA,EAA4BlK,mBAAiB,KAA7C,mBAAOwE,EAAP,KAAemF,EAAf,KACA,EAAsC3J,mBAAmB,IAAzD,mBAAO0J,EAAP,KAAoBO,EAApB,KACA,EAAwCjK,mBAAiB,IAAzD,mBAAO8J,EAAP,KAAqBC,EAArB,KACA,EAA0B/J,mBAAgB,CAAEoD,QAAS,GAAIiE,KAAM,GAAIC,OAAQ,GAAIC,SAAU,GAAIjI,YAA7F,mBAAOoI,EAAP,KAAckC,EAAd,KACA,EAAkC5J,mBAAkB,IAApD,mBAAO6J,EAAP,KAAkBG,EAAlB,KAQMiF,EAAoB,SAACvF,GACzBO,EAAeP,IAMXwF,EAAa,SAACC,GAClBjF,EAAQiF,IAEJC,EAAqB,SAACtF,GAC1BC,EAAgBD,IAkBlB,OAfA3J,qBAAU,WAER,GADA+J,EAAQ,GACJmF,GAAmB/P,GAAU,CAC/B,IAAIgQ,EAAU,YAAOD,GAAmB/P,IACxCgQ,EAAWC,MAAK,SAACC,EAAIC,GACnB,OAAOD,EAAGlI,OAAOM,cAAgB6H,EAAGnI,OAAOM,eAAiB,EAAI,KAElE0H,EAAU,CAAIlI,GAAO9H,IAAX,mBAAwBgQ,IAClCtF,EAAasF,GACb1F,EAASxC,GAAO9H,SAEhB0K,EAAa,IACbJ,EAAS,CAAExG,QAAS,GAAIiE,KAAM,GAAIC,OAAQ,GAAIC,SAAU,GAAIjI,QAASA,MAEtE,CAACA,IAEF,sBAAKqD,UAAU,oDAAoDmJ,MAAO,CAAEC,MAAO,OAAnF,UACE,qBAAKpJ,UAAU,eAAf,oGACA,qBAAKA,UAAU,eAAf,sHACA,qBAAKA,UAAU,eAAf,mDACA,qBAAKA,UAAU,oBAAf,4HACA,qBAAKA,UAAU,mCAAf,kDACS,GAARqM,EACC,cAACxF,GAAD,CACEhF,OAAQA,EACRkD,MAAOA,EACPmC,UAAWA,EACXH,YAAaA,EACbI,aAAcA,EACdC,gBAAiBqF,EACjBzF,UAlDa,SAACnF,GACpBmF,EAAUnF,IAkDJoF,SAhDY,SAAClC,GACnBkC,EAASlC,IAgDHuC,eAAgBgF,EAChBjF,aA3CgB,SAACH,GACvBG,EAAaH,IA2CPK,QAASgF,IAGX,cAAChD,GAAD,CACE1H,OAAQA,EACRkD,MAAOA,EACPgC,YAAaA,EACbK,gBAAiBqF,EACjBnF,eAAgBgF,EAChB/E,QAASgF,OC/bnB,IAAQ9F,GAAWC,IAAXD,OACAE,GAAaC,IAAbD,SAmBR,SAASE,GAAQC,GACf,MAA6BjK,IAArBe,EAAR,EAAQA,QAASjB,EAAjB,EAAiBA,QACToK,EAAkHD,EAAlHC,YAAahC,EAAqG+B,EAArG/B,MAAOkC,EAA8FH,EAA9FG,SAAUC,EAAoFJ,EAApFI,UAAWC,EAAyEL,EAAzEK,aAAcC,EAA2DN,EAA3DM,gBAAiBC,EAA0CP,EAA1CO,aAAcC,EAA4BR,EAA5BQ,eAAgBC,EAAYT,EAAZS,QAE9G,EAAsClK,mBAAiB,IAAvD,mBAAOmK,EAAP,KAAoBC,EAApB,KAEMhH,EAAUX,mBAAQ,WACtB,OAAOc,EAAU4G,GAAeA,EAAc,KAC7C,CAACA,IAEElC,EAAgBxE,EAASL,GAAS,GAExCjD,qBAAU,WACR,IAAMkK,EAAY,uCAAG,kCAAAlC,EAAA,0DACfF,EADe,8BAIA,IADD4B,EAAUS,WAAU,SAACC,GAAD,OAAUA,EAAKnH,UAAYG,EAAU4G,MAHxD,iEAOMlC,EAAcX,SAPpB,cAOTA,EAPS,iBAQIW,EAAcZ,OARlB,eAQTA,EARS,iBASQY,EAAcV,WATtB,QASTA,EATS,OAUTG,EAAQ,CAAEJ,SAAQD,OAAME,SAAUA,EAASnC,WAAYhC,UAAS9D,WACtE0K,EAAa,GAAD,mBAAKH,GAAL,CAAgBnC,KAXb,4GAAH,qDAiBlB2C,MACC,CAACpC,IAEJ,IAAMuC,EAAiB/H,mBAAQ,WAC7B,IAAMgI,EAAM,GAeZ,OAdAf,EAAYgB,SAAQ,SAACH,EAAMI,GACzB,IACE,IAAMvH,EAAUmH,EAAK7F,MAAM,KAAK,GAC1BF,EAAS+F,EAAK7F,MAAM,KAAK,GAC/B,GAAY,IAAR6F,EACF,SAEgC,MAAbnH,ETxEjBsM,MAAM,2BSwE6C,KAAZtM,ICnF5C,SAAqBI,GAE1B,QADW,mBACH0C,KAAK1C,GDiFwDmM,CAAYnL,KACzEiG,EAAIG,KAAK,CAAExH,QAASmH,EAAMI,UAE5B,MAAOS,GACPX,EAAIG,KAAK,CAAExH,QAASmH,EAAMI,cAGvBF,EAAItI,OACT,qBAAKQ,UAAU,+DAAf,SACG8H,EAAII,KAAI,SAACN,GACR,OACE,qBAAsB5H,UAAU,GAAhC,SACE,yCACI4H,EAAKI,MAAQ,EADjB,UACsBJ,EAAKnH,QAD3B,oHADQmH,EAAKI,YAQnB,OACH,CAACjB,IAEJ,OACE,gCACE,sBAAK/G,UAAU,qBAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,qBAAKA,UAAU,8BAAf,sCACA,cAAC,IAAD,CACEmI,UAAU,EACVC,KAAK,QACLC,YAAU,EACVC,gBAAgB,WAChBC,kBAAkB,cAClBC,aAAc,SAACC,EAAGC,GAChB,IAAM3D,EAAQmC,EAAUyB,MAAK,SAACf,GAAD,OAAUA,EAAKnH,UAAYiI,EAAY7H,SAC9D2G,EAAciB,EAAEG,oBACtB,SACE7D,EAAMJ,OAAOiE,oBAAoBC,SAASrB,IAC1CzC,EAAML,KAAKkE,oBAAoBC,SAASrB,IACxCzC,EAAMtE,QAAQmI,oBAAoBC,SAASrB,KAM/CsB,SAAU,SAACL,GACThB,EAAegB,IAEjBM,YAAY,qBACZlI,MAAO,CAAEA,MAAOkE,EAAMtE,SACtBT,UAAU,qBACVgJ,SAAU,SAACvI,GACTwG,EAASC,EAAUyB,MAAK,SAACf,GAAD,OAAUA,EAAKnH,UAAYA,OAzBvD,SA4BGyG,EAAU1H,QACT0H,EAAUgB,KAAI,SAACN,EAAMI,GACnB,OACE,cAAC,GAAD,CAAqDnH,MAAO+G,EAAKnH,QAAjE,SACE,sBAAKT,UAAU,GAAf,UACE,sBAAMA,UAAU,eAAhB,SAAgC4H,EAAKjD,SADvC,IACsD,sBAAM3E,UAAU,OAAhB,eACnD4H,EAAKnH,QAAUmH,EAAKnH,QAAUmH,EAAKlD,SAH3BkD,EAAKnH,QAAUmH,EAAKlD,KAAOkD,EAAKjD,gBAUvD,sBAAK3E,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,0BACA,qBAAKA,UAAU,4BAAf,SAA4C+E,EAAMH,iBAGtD,gCACE,qBAAK5E,UAAU,iBAAf,sCACA,sBAAKA,UAAU,2BAAf,UACE,qBAAKA,UAAU,YAAf,SAA4B+G,EAAYvH,OAASuH,EAAYmB,KAAI,SAACN,EAAMI,GAAP,OAAiB,8BAAkBA,EAAQ,GAAhBA,MAA4B,IACxH,cAAC,GAAD,CACEhI,UAAU,UACVmI,UAAU,EACVtH,MAAOsG,EACP6B,SAAU,SAACP,GAET,GADArB,EAAgBqB,EAAEQ,OAAOpI,OACH,IAAlB4H,EAAEQ,OAAOpI,MAAb,CAIA,IAAMkG,EAAc0B,EAAEQ,OAAOpI,MAAMkB,MAAM,MACzCuF,EAAeP,QAJbO,EAAe,KAMnB4B,KAAM,UAIXrB,EAED,sBAAK7H,UAAU,GAAf,UACE,sBAAKA,UAAU,yCAAf,UACE,qBAAKA,UAAU,sBACf,qBACEA,UAAU,+BACVmJ,MAAO,CAAEE,OAAQ,QACjBpJ,QAAS,WACPmH,EAAgB,kGAChBE,EAAe,CAAC,iDAAkD,oDALtE,yCAWF,2DAEE,cAAC,IAAD,CAAMnC,GAAG,IAAT,SACE,sBAAMnF,UAAU,0CAAhB,yCAKN,cAAC,IAAD,CACEG,KAAK,UACLH,UAAU,OACVC,QAAS,WACFrC,EAIL2J,EAAQ,GAHN+B,IAAQvK,MAAM,yCALpB,mCAiBN,SAASwK,GAAezC,GAAwB,IAAD,MAC7C,EAA6BjK,IAArBe,EAAR,EAAQA,QAASjB,EAAjB,EAAiBA,QACToK,EAAiED,EAAjEC,YAAahC,EAAoD+B,EAApD/B,MAAOuC,EAA6CR,EAA7CQ,eAAgBF,EAA6BN,EAA7BM,gBAAiBG,EAAYT,EAAZS,QAG7D,EAAiEzH,mBAAQ,WACvE,IAAM0J,EAAczC,EAAY0C,QAAO,SAAC7B,GACtC,MAAgB,KAATA,KAELiC,EAAY,IACVH,EAAgB,GAChBuD,EAAkB,GAClBtD,EAAY,GAYlB,OAXAH,EAAYzB,SAAQ,SAACH,EAAMI,GACzB,IAAMkF,EAAMtF,EAAK7F,MAAM,KACjBoD,EAAK+H,EAAI,GACTrL,EAASsL,WAAWD,EAAI,IAAIzK,WAClCiH,EAAczB,KAAK9C,GACnB,IAAMmF,EAAc1I,EAAYC,EAAQkD,EAAMH,UAC9CqI,EAAgBhF,KAAKqC,EAAY7H,YACjCoH,EAAY3F,GAAO2F,EAAWS,GAC9BX,EAAU1B,KAAV,yBAAiB9C,KAAItD,UAAWkD,GAAhC,IAAuC6E,IAAK5B,QAGvC,CAAEiF,kBAAiBpD,YAAWF,YAAWD,mBAC/C,CAAC3C,IApBIkG,EAAR,EAAQA,gBAAiBpD,EAAzB,EAAyBA,UAAWF,EAApC,EAAoCA,UAAWD,EAA/C,EAA+CA,cAsB/C,EAAqCxE,GAAaH,EAAOnH,EAAS4C,EAAwB7D,IAAlFyI,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,aACpB,EAAiDK,GAAWb,EAAOnH,GAA3DiI,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,aAAcE,EAAlC,EAAkCA,WAC1BI,EAAQD,KAARC,IACR,EFnHkC,SAAC,GAA2F,IAAzFtB,EAAwF,EAAxFA,MAAOK,EAAiF,EAAjFA,WAAYsE,EAAqE,EAArEA,cAAeG,EAAsD,EAAtDA,UAAWxD,EAA2C,EAA3CA,IAAK4G,EAAsC,EAAtCA,gBACvF,EAAsCpQ,IAA9Be,EAAR,EAAQA,QAASjB,EAAjB,EAAiBA,QAASI,EAA1B,EAA0BA,QAC1B,EAA4BM,mBAAiB,KAA7C,mBAAO2M,EAAP,KAAeC,EAAf,KACA,EAAwC5M,mBAAiB,IAAzD,mBAAO6M,EAAP,KAAqBC,EAArB,KACM5D,EAAwBlF,IACxBmF,EAAc,uCAAG,wCAAAhB,EAAA,yDAChB5H,EADgB,oDAIhBwH,EAJgB,oDAOT,KAARiB,EAPiB,0EAWItJ,EAAQqN,cAXZ,UAWbC,EAXa,QAafvF,GAAMC,EAAOpI,GAbE,kCAcI4J,EAAsBgE,YAAY6C,eAAe1D,EAAeuD,EAAiB,CACpGpM,MAAOqD,GAAO2F,EAAWxD,KAfV,QAcXoE,EAdW,OAiBXT,EAAS9F,GAAOJ,GAAOuG,EAAS5H,WAAYgI,EAAOhI,YAAa4D,GACtE4D,EAAUD,GAlBO,yCAoBIzD,EAAsBgE,YAAY8C,iBAAiBtI,EAAMtE,QAASiJ,EAAeuD,EAAiB,CACrHpM,MAAOwF,IArBQ,QAoBXoE,EApBW,OAuBF6C,KAAOC,MAAMC,WAAW/C,EAAOhI,WAAY,QAAQA,WAC5DuH,EAAS9F,GAAOJ,GAAOuG,EAAS5H,WAAYgI,EAAOhI,YAAa4D,GACtE4D,EAAUD,GAzBO,QA2BnBG,EAAgB,IA3BG,kDA6BnBA,GAAgB,eAAUpL,aAAV,eAAiBuK,UAAW,KAAUqB,SAAtC,UAAgD,KAAUC,YAA1D,aAAgD,EAAgBtB,UAAW,KAAUA,SA7BlF,0DAAH,qDAqCpB,OAJA9L,qBAAU,WACRgJ,MACC,CAAC5I,EAASwH,EAAYiB,EAAKqD,IAEvB,CAAEM,SAAQE,gBEyEgBuD,CAAqB,CAAE1I,QAAOK,aAAY6H,kBAAiBvD,gBAAeG,YAAWxD,QAA9G2D,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,aAChB,EAA8B7M,oBAAkB,GAAhD,mBAAOyM,EAAP,KAAgBC,EAAhB,KACMzE,EAAgBxE,EAASiE,EAAMtE,SAC/B8F,EAAwBlF,IAExByJ,EAAU,CACd,CACEC,MAAO,2BACPC,UAAW,KACXpB,IAAK,MAEP,CACEmB,MAAO,eACPC,UAAW,SACXpB,IAAK,SACLR,MAAO,MACP6B,OAAQ,SAACpJ,EAAaqJ,GAAd,OACN,gCACGrJ,EADH,IACYqJ,EAAOvG,YAIvB,CACEyE,MAAO,MACP2B,MAAO,eACPnB,IAAK,SACLqB,OAAQ,SAACE,EAAWD,GAAZ,OACN,cAAC,IAAD,CACEE,QAAM,EACNnL,QAAS,WACP,IAAMoL,EAAY,YAAOtE,GACzBsE,EAAaC,OAAOJ,EAAOtB,IAAK,GAChCtC,EAAe+D,GACfjE,EAAgBiE,EAAaxH,KAAK,QANtC,6BAeN,OACE,gCACE,sBAAK7D,UAAU,oBAAf,UACE,qBAAKA,UAAU,iBAAf,sCACA,cAAC,IAAD,CAAO8K,QAASA,EAASS,WAAY5B,EAAW6B,YAAY,EAAOC,OAAQ,CAAEC,EAAG,UAElF,gCACE,qBAAK1L,UAAU,iBAAf,0BACA,sBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,YAAf,UACE,8BAAM2J,EAAUnK,SAChB,8DAEF,sBAAKQ,UAAU,YAAf,UACE,gCACG+C,GAAQV,GAAawH,EAAW9E,EAAMH,UAAW,GADpD,IACyDG,EAAMJ,UAE/D,0EAEF,sBAAK3E,UAAU,YAAf,UACE,8BAAM2J,EAAUnK,SAChB,8DAEF,sBAAKQ,UAAU,YAAf,UACE,gCACG+C,GAAQV,GAAa0D,EAAchB,EAAMH,UAAW,GADvD,IAC4DG,EAAMJ,UAElE,8DAEF,sBAAK3E,UAAU,YAAf,UACE,gCACGqC,GAAa2H,GADhB,cAC0BvF,GAAO9H,UADjC,aAC0B,EAAiBgI,UAE3C,uGACgBtC,GAAagE,GAD7B,cACoC5B,GAAO9H,UAD3C,aACoC,EAAiBgI,OADrD,UAIF,sBAAK3E,UAAU,YAAf,UACE,gCACG+C,GAAQV,GAAawD,GAAa,GADrC,cAC0CpB,GAAO9H,UADjD,aAC0C,EAAiBgI,UAE3D,oEAIN,qBAAK3E,UAAU,eAAf,SAA+BkK,IAC/B,sBAAKlK,UAAU,YAAf,UACE,cAAC,IAAD,CACEG,KAAK,UACLF,QAAS,WACPsH,EAAQ,IAEVvH,UAAU,OACVI,KAAM,cAACuL,EAAA,EAAD,MAGPvG,EACC,cAAC,IAAD,CACEjF,KAAK,UACL2J,QAASA,EACT7J,QAAO,sBAAE,8BAAAuF,EAAA,kEAGLuE,GAAW,IACPjF,GAAMC,EAAOpI,GAJZ,gCAKQ4J,EAAsB6G,eAAe1D,EAAeuD,EAAiB,CAC9EpM,MAAOqD,GAAO2F,EAAWxD,KANxB,OAKHuF,EALG,+CASQrF,EAAsB8G,iBAAiBtI,EAAMtE,QAASiJ,EAAeuD,EAAiB,CAC/FpM,MAAOwF,IAVN,QASHuF,EATG,gCAaCA,EAAGC,OAbJ,QAcL9B,GAAW,GACX9D,IACAqD,IAAQwC,QAAQ,4BAChBC,YAAW,WACTC,QAAQC,OACP,GAnBE,kDAqBL3C,IAAQvK,MAAM,KAAU4L,SAAV,UAAoB,KAAUC,YAA9B,aAAoB,EAAgBtB,UAAW,KAAUA,SACvES,GAAW,GAtBN,0DAHX,0BAgCA,cAAC,IAAD,CACE5J,KAAK,UACL2J,QAASA,EACT7J,QAAO,sBAAE,8BAAAuF,EAAA,sEAELuE,GAAW,GAFN,SAGYzE,EAAc4G,QAAQ1L,EAAwB7D,GAAUwP,MAHpE,cAGCP,EAHD,gBAIiBA,EAAGC,OAJpB,cAKL9B,GAAW,GACXxE,IACAU,IACAqD,IAAQwC,QAAQ,4BARX,kDAULxC,IAAQvK,MAAM,KAAU4L,SAAV,UAAoB,KAAUC,YAA9B,aAAoB,EAAgBtB,UAAW,KAAUA,SACvES,GAAW,GAXN,0DAHX,gCA0BK,SAASqC,KACtB,IAAQzP,EAAYE,IAAZF,QACR,EAAwBU,mBAAiB,GAAzC,mBAAOgP,EAAP,KAAa9E,EAAb,KACA,EAAsClK,mBAAmB,IAAzD,mBAAO0J,EAAP,KAAoBO,EAApB,KACA,EAAwCjK,mBAAiB,IAAzD,mBAAO8J,EAAP,KAAqBC,EAArB,KACA,EAA0B/J,mBAAgB,CAAEoD,QAAS,GAAIiE,KAAM,GAAIC,OAAQ,GAAIC,SAAU,GAAIjI,YAA7F,mBAAOoI,EAAP,KAAckC,EAAd,KACA,EAAkC5J,mBAAkB,IAApD,mBAAO6J,EAAP,KAAkBG,EAAlB,KAKMiF,EAAoB,SAACvF,GACzBO,EAAeP,IAMXwF,EAAa,SAACC,GAClBjF,EAAQiF,IAEJC,EAAqB,SAACtF,GAC1BC,EAAgBD,IAkBlB,OAfA3J,qBAAU,WAER,GADA+J,EAAQ,GACJmF,GAAmB/P,GAAU,CAC/B,IAAIgQ,EAAU,YAAOD,GAAmB/P,IACxCgQ,EAAWC,MAAK,SAACC,EAAIC,GACnB,OAAOD,EAAGlI,OAAOM,cAAgB6H,EAAGnI,OAAOM,eAAiB,EAAI,KAElE0H,EAAU,CAAIlI,GAAO9H,IAAX,mBAAwBgQ,IAClCtF,EAAasF,GACb1F,EAASxC,GAAO9H,SAEhB0K,EAAa,IACbJ,EAAS,CAAExG,QAAS,GAAIiE,KAAM,GAAIC,OAAQ,GAAIC,SAAU,GAAIjI,QAASA,MAEtE,CAACA,IAEF,sBAAKqD,UAAU,oDAAoDmJ,MAAO,CAAEC,MAAO,OAAnF,UACE,qBAAKpJ,UAAU,eAAf,oGACA,qBAAKA,UAAU,eAAf,sHACA,qBAAKA,UAAU,eAAf,mDACA,qBAAKA,UAAU,oBAAf,4HACA,qBAAKA,UAAU,mCAAf,kDACS,GAARqM,EACC,cAAC,GAAD,CACEtH,MAAOA,EACPmC,UAAWA,EACXH,YAAaA,EACbI,aAAcA,EACdC,gBAAiBqF,EACjBxF,SA9CY,SAAClC,GACnBkC,EAASlC,IA8CHuC,eAAgBgF,EAChBjF,aAzCgB,SAACH,GACvBG,EAAaH,IAyCPK,QAASgF,IAGX,cAAC,GAAD,CACExH,MAAOA,EACPgC,YAAaA,EACbK,gBAAiBqF,EACjBnF,eAAgBgF,EAChB/E,QAASgF,O,OE1cZ,SAASmB,GAAWpQ,GACzB,IAAMP,EAAU,IAAI4Q,IAAarQ,GAEjC,OADAP,EAAQ6Q,gBrBZsB,KqBavB7Q,EAGM,SAAS8Q,KACtB,OACE,cAAC,IAAD,CAAmBH,WAAYA,GAA/B,SACE,qBAAK1N,UAAU,oBAAf,SACE,eAAC,IAAD,WACE,cAACtC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoQ,KAAK,IAAIC,OAAK,EAACC,UAAW5B,KACjC,cAAC,IAAD,CAAO0B,KAAK,OAAOE,UAAWC,eCxB1C,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB7P,MAAK,YAAkD,IAA/C8P,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASzD,OAAO,cAAC,GAAD,IAAS0D,SAASC,eAAe,SAKjDV,O","file":"static/js/main.b965234d.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\n\nexport const POLLING_INTERVAL = 12000;\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42, 56, 88, 89, 97, 137, 1337, 80001],\n});\nexport const connectorLocalStorageKey = 'connectorId';\n","export enum ChainId {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  ThunderCoreTestnet = 18,\n  Cronos = 25,\n  CronosTestnet = 338,\n  Kovan = 42,\n  BSC = 56,\n  BSCTestnet = 97,\n  xDai = 100,\n  Gnosis = 100,\n  ThunderCore = 108,\n  Polygon = 137,\n  Theta = 361,\n  ThetaTestnet = 365,\n  Moonriver = 1285,\n  Moonbeam = 1284,\n  Mumbai = 80001,\n  Harmony = 1666600000,\n  Palm = 11297108109,\n  PalmTestnet = 11297108099,\n  Localhost = 1337,\n  Hardhat = 31337,\n  Fantom = 250,\n  Avalanche = 43114,\n  Songbird = 19,\n  MoonbaseAlpha = 1287,\n  OasisEmerald = 42262,\n  Stardust = 588,\n  OptimismKovan = 69,\n  Optimism = 10,\n  Arbitrum = 42161,\n  ArbitrumRinkeby = 421611,\n}\n","import { ChainId } from '@/config/constants/chainId';\nconst RPC = {\n  [ChainId.Mainnet]: 'https://mainnet.infura.io/v3/13ab66893f804b6684194366db26efc3',\n  [ChainId.Rinkeby]: 'https://rinkeby.infura.io/v3/13ab66893f804b6684194366db26efc3',\n  [ChainId.Kovan]: 'https://kovan.infura.io/v3/13ab66893f804b6684194366db26efc3',\n  [ChainId.BSC]: 'https://bsc-dataseed.binance.org/',\n  [ChainId.BSCTestnet]: 'https://data-seed-prebsc-2-s3.binance.org:8545',\n};\n\nexport default RPC;\n","import { StaticJsonRpcProvider } from '@ethersproject/providers';\nimport RPC from './rpc';\nimport { ChainId } from '@/config/constants/chainId';\n\nconst getRpcUrl = (chainId) => {\n  return new StaticJsonRpcProvider(RPC[chainId] ? RPC[chainId] : RPC[ChainId.Rinkeby]);\n};\n\nexport const simpleRpcProvider = getRpcUrl;\n\nexport default null;\n","import { useEffect, useState, useRef } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { simpleRpcProvider } from '../utils/providers';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React();\n  const refEth = useRef(library);\n  const defaultChainId = chainId ?? parseInt('4', 10);\n  const [provider, setProvider] = useState(library || simpleRpcProvider(defaultChainId));\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider(defaultChainId));\n      refEth.current = library;\n    }\n  }, [library]);\n\n  return { library: provider, chainId: defaultChainId, ...web3React };\n};\n\nexport default useActiveWeb3React;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Button } from 'antd';\n\nimport { useEagerConnect, useInactiveListener } from '@/dapp/hooks';\nimport { injected, connectorLocalStorageKey } from '@/dapp/connectors';\nimport { SearchOutlined } from '@ant-design/icons';\nimport useActiveWeb3React from '@/hooks/useActiveWeb3React';\n\nexport default function Header() {\n  const { connector, account, chainId, activate, deactivate } = useActiveWeb3React();\n  const [activatingConnector, setActivatingConnector] = useState<any>();\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  const triedEager = useEagerConnect();\n\n  useInactiveListener(!triedEager || !!activatingConnector);\n\n  const getAccount = useMemo(() => {\n    if (account) {\n      return account.substring(0, 6) + '...' + account.substring(account.length - 12, account.length);\n    }\n    return '';\n  }, [account]);\n  return (\n    <div>\n      <div className=\"flex justify-between items-center\">\n        <div>\n          {account ? (\n            <Button\n              onClick={() => {\n                deactivate();\n                localStorage.setItem(connectorLocalStorageKey, '');\n              }}\n              type=\"primary\"\n              icon={<SearchOutlined />}\n            >\n              {getAccount}\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                activate(injected);\n                localStorage.setItem(connectorLocalStorageKey, String(chainId));\n              }}\n              type=\"primary\"\n              icon={<SearchOutlined />}\n            >\n              Connect Wallet\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useWeb3React } from '@web3-react/core';\nimport { useState, useEffect } from 'react';\n\nimport { injected, connectorLocalStorageKey } from './connectors';\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      const hasSignedIn = window.localStorage.getItem(connectorLocalStorageKey);\n      if (isAuthorized && hasSignedIn) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      }\n      // else if (isMobile() && window.ethereum && hasSignedIn) {\n      //   activate(injected, undefined, true).catch(() => {\n      //     setTried(true);\n      //   });\n      // }\n      else {\n        setTried(true);\n      }\n    });\n  }, []); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect((): any => {\n    const { ethereum } = window as any;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(injected);\n      };\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(injected);\n      };\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(injected);\n      };\n\n      ethereum.on('connect', handleConnect);\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect);\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n}\n","import { ChainId } from './chainId';\n\nexport default {\n  multiTransfer: {\n    [ChainId.BSC]: '0xd321cb9fdf640fbec1f8b937f31dae15448a94f7',\n    [ChainId.BSCTestnet]: '0x2485A67510c3F6fA2C3d86d524ef70929E8a9177',\n    [ChainId.Rinkeby]: '0xffA1578B4774342D557104dd4A9C543DD923691e',\n    [ChainId.Kovan]: '0x08bC330c2dBB267f5a46a9D9775df5AB9ceC0aA1',\n  },\n};\n","import { ChainId } from './chainId';\n\nexport default ChainId.Rinkeby;\n","import addresses from '@/config/constants/contracts';\nimport defaultChainId from '@/config/constants/defaultChainId';\nimport { Address } from '@/config/constants/types';\n\nexport const getAddress = (address: Address, chainId: number): string => {\n  return address[chainId] ? address[chainId] : address[defaultChainId];\n};\n\nexport const getMultiTransferAddress = (chainId) => {\n  return getAddress(addresses.multiTransfer, chainId);\n};\n","import { getAddress } from '@ethersproject/address';\n\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\n\nexport function isAddressSimple(value: any): boolean {\n  if (value.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n    return true;\n    // Maybe ICAP? (we only support direct mode)\n  }\n  return false;\n}\n","import useActiveWeb3React from './useActiveWeb3React';\nimport { useMemo } from 'react';\nimport { getProviderOrSigner } from '../utils';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Contract } from '@ethersproject/contracts';\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers';\nimport { getMultiTransferAddress } from '@/utils/addressHelpers';\nimport bep20TransferAbi from '@/config/abi/erc20Transfer.json';\nimport bep20Abi from '@/config/abi/erc20.json';\nimport { isAddress } from '@/utils/address';\n\nexport const useERC20 = (address: string, withSignerIfPossible = true) => {\n  return useContract(address, bep20Abi, withSignerIfPossible);\n};\n\nexport const getERC20 = (address: string, withSignerIfPossible = true) => {\n  return useContract(address, bep20Abi, withSignerIfPossible);\n};\n\nexport function useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || address === AddressZero || !ABI || !library) return null;\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useBep20TransferContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(getMultiTransferAddress(chainId), bep20TransferAbi, withSignerIfPossible);\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`);\n  }\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\n","import { JsonRpcSigner, Web3Provider } from '@ethersproject/providers';\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked();\n}\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library;\n}\n","import BigNumber from 'bignumber.js';\n\nexport function parseAmount(amount: string, decimal = 18) {\n  if (!amount) return '0';\n\n  amount = cleanupAmount(amount);\n\n  const split = amount.split('.');\n  const wholePart = split[0];\n  const fracPart = split[1] || '';\n  if (split.length > 2 || fracPart.length > decimal) {\n    throw new Error(`Cannot parse '${amount}' as bignumber`);\n  }\n  return trimLeadingZeroes(wholePart + fracPart.padEnd(decimal, '0'));\n}\nexport function formatAmount(amount: string, decimal = 18) {\n  if (!amount) return '0';\n\n  const amountBN = new BigNumber(amount, 10);\n  amount = amountBN.toString(10);\n  const wholeStr = amount.substring(0, amount.length - decimal) || '0';\n  const fractionStr = amount\n    .substring(amount.length - decimal)\n    .padStart(decimal, '0')\n    .substring(0, decimal);\n\n  return trimTrailingZeroes(`${wholeStr}.${fractionStr}`);\n}\n\nexport function cleanupAmount(amount) {\n  return amount.replace(/,/g, '').trim();\n}\n\nexport function trimTrailingZeroes(value) {\n  return value.replace(/\\.?0*$/, '');\n}\n\nexport function trimLeadingZeroes(value) {\n  value = value.replace(/^0+/, '');\n  if (value === '') {\n    return '0';\n  }\n  return value;\n}\n\nexport function formatWithCommas(value) {\n  const pattern = /(-?\\d+)(\\d{3})/;\n  while (pattern.test(value)) {\n    value = value.replace(pattern, '$1,$2');\n  }\n  return value;\n}\n\nexport function toFixed(number, pp) {\n  let num = isNaN(number) || !number ? 0 : number;\n  const p = isNaN(pp) || !pp ? 0 : pp;\n  num = getFullNum(num);\n  const n = (num + '').split('.');\n  let x = n.length > 1 ? n[1] : '';\n  if (x.length > p) {\n    x = x.substr(0, p);\n  } else {\n    x += Array(p - x.length + 1).join('0');\n  }\n  return n[0] + (x == '' ? '' : '.' + x);\n}\nexport function accMul(arg1, arg2) {\n  if (!arg1 || !arg2) {\n    return '0';\n  }\n  const num = new BigNumber(arg1).times(new BigNumber(arg2));\n  return num.toString();\n}\n\nexport function getFullNum(num) {\n  // 处理非数字\n  if (isNaN(num)) {\n    return num;\n  }\n  const str = String(num);\n  if (!/e/i.test(str)) {\n    return num;\n  }\n  return Number(num)\n    .toFixed(18)\n    .replace(/\\.?0+$/, '');\n}\n\nexport function accDiv(arg1: string, arg2: string) {\n  if (!arg1 || !arg2) {\n    return 0;\n  }\n  const num = new BigNumber(arg1).div(new BigNumber(arg2));\n  return num.toFixed();\n}\n\nexport function accAdd(arg1: string, arg2: string) {\n  const num = new BigNumber(arg1).plus(new BigNumber(arg2));\n  return num.toFixed();\n}\nexport function accSub(arg1: string, arg2: string) {\n  const num = new BigNumber(arg1).minus(new BigNumber(arg2));\n  return num.toFixed();\n}\n\n// 大于等于\nexport function accGte(arg1: string, arg2: string) {\n  return new BigNumber(arg1).gte(new BigNumber(arg2));\n}\n\n// 大于\nexport function accGt(arg1: string, arg2: string) {\n  return new BigNumber(arg1).gt(new BigNumber(arg2));\n}\n\nexport function gasProcessing(arg1) {\n  return toFixed(accMul(new BigNumber(arg1), 1.1), 0);\n}\n\n// export function toPrecision(arg1) {\n//   let num = new BigNumber(arg1);\n//   if (accGte(num, 1000)) {\n//     return toFixed(num, 0);\n//   }\n\n//   num = num.toPrecision(4);\n//   if (num.includes('e')) {\n//     const [num1, uint] = num.split('e');\n//     const newUint = Number(uint);\n//     num = accMul(new BigNumber(num1).toString(10), new BigNumber(10).pow(newUint).toString(10));\n//   }\n//   return num;\n// }\n","import rinkeby from './rinkeby.json';\nimport kovan from './kovan.json';\nimport bscTestnet from './bsc-testnet.json';\nimport bsc from './bsc.json';\nimport { ChainId } from '../constants/chainId';\nimport { Token } from '@/config/constants/types';\n\ntype TokenList = { [chainId: number]: Token[] };\n\nconst TOKENLIST: TokenList = {\n  [ChainId.BSC]: bsc,\n  [ChainId.Rinkeby]: rinkeby,\n  [ChainId.Kovan]: kovan,\n  [ChainId.BSCTestnet]: bscTestnet,\n};\n\nexport default TOKENLIST;\n","import { ChainId } from '@/config/constants/chainId';\nimport { Token } from '@/config/constants/types';\ntype NativeMap = { [chainId: number]: Token };\nexport const NATIVE: NativeMap = {\n  [ChainId.BSC]: {\n    name: 'BNB Token',\n    symbol: 'BNB',\n    address: '',\n    chainId: ChainId.BSC,\n    decimals: 18,\n    logoURI: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/binance/info/logo.png',\n  },\n  [ChainId.Rinkeby]: {\n    name: 'ETH Token',\n    symbol: 'ETH',\n    address: '',\n    chainId: ChainId.Rinkeby,\n    decimals: 18,\n    logoURI: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/binance/info/logo.png',\n  },\n  [ChainId.Kovan]: {\n    name: 'ETH Token',\n    symbol: 'ETH',\n    address: '',\n    chainId: ChainId.Kovan,\n    decimals: 18,\n    logoURI: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/binance/info/logo.png',\n  },\n  [ChainId.BSCTestnet]: {\n    name: 'BNB Token',\n    symbol: 'BNB',\n    address: '',\n    chainId: ChainId.BSCTestnet,\n    decimals: 18,\n    logoURI: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/binance/info/logo.png',\n  },\n};\n\nexport const getNative = (chainId) => {\n  return NATIVE[chainId] ? NATIVE[chainId] : NATIVE[ChainId.Rinkeby];\n};\n","import { Token } from '@/config/constants/types';\nimport { NATIVE } from '@/config/constants/native';\nexport const isEth = (token: Token, chainId: number) => {\n  const native = NATIVE[chainId];\n  if (native && token.address === native.address && token.symbol.toLowerCase() === native.symbol.toLowerCase()) {\n    return true;\n  }\n  return false;\n};\n","import { isEth } from '@/utils/isEth';\nimport { useEffect, useState } from 'react';\nimport useActiveWeb3React from './useActiveWeb3React';\nimport { useBep20TransferContract, useERC20 } from './useContract';\nimport { Token } from '@/config/constants/types';\nimport { accAdd, accGt, accMul, formatAmount, parseAmount } from '@/utils/formatBalance';\nimport { ethers } from 'ethers';\nimport { Erc20 } from '@/config/abi/types';\nimport { isAddress } from '@/utils/address';\n\nexport const useAllowance = (token: Token, account: string, to: string) => {\n  const { chainId } = useActiveWeb3React();\n\n  const [isApproved, setIsApproved] = useState<boolean>(false);\n  const bep20Contract = useERC20(token.address);\n\n  const getAllowance = async () => {\n    if (!account) {\n      return;\n    }\n    if (isEth(token, chainId)) {\n      setIsApproved(true);\n      return;\n    }\n    const response = await bep20Contract.allowance(account, to);\n    setIsApproved(accGt(response.toString(), '0'));\n  };\n  useEffect(() => {\n    getAllowance();\n  }, [account]);\n\n  return { isApproved, getAllowance };\n};\n\nexport const useBalance = (token: Token, account: string) => {\n  const { library, chainId } = useActiveWeb3React();\n  const [bnbBalance, setBalance] = useState<string>('0');\n  const [tokenBalance, setTokenBalance] = useState<string>('0');\n  const bep20Contract = useERC20(token.address);\n\n  const getBalance = async () => {\n    if (!account) {\n      return;\n    }\n    const balance = await library.getBalance(account);\n    setBalance(balance.toString());\n    if (isEth(token, chainId)) {\n      const tokenBalance = balance;\n      setTokenBalance(tokenBalance.toString());\n    } else {\n      const tokenBalance = await bep20Contract.balanceOf(account);\n      setTokenBalance(tokenBalance.toString());\n    }\n  };\n  useEffect(() => {\n    getBalance();\n  }, [account]);\n\n  return { bnbBalance, tokenBalance, getBalance };\n};\n\nexport const useTransferFee = () => {\n  const [fee, setFee] = useState<string>('');\n  const bep20TransferContract = useBep20TransferContract();\n\n  const getTransferFee = async () => {\n    const response = await bep20TransferContract.fee();\n    setFee(response.toString());\n  };\n\n  useEffect(() => {\n    getTransferFee();\n  }, []);\n\n  return { fee };\n};\n\ninterface TransferGasFee {\n  token: Token;\n  isApproved: boolean;\n  amount?: string;\n  toAddressList: string[];\n  allAmount: string;\n  fee: string;\n  tokenAmountList?: string[];\n}\n\nexport const useTransferGasFee = ({ token, isApproved, amount, toAddressList, allAmount, fee }: TransferGasFee) => {\n  const { account, chainId, library } = useActiveWeb3React();\n  const [allFee, setAllFee] = useState<string>('0');\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const bep20TransferContract = useBep20TransferContract();\n  const getTransferFee = async () => {\n    if (!account) {\n      return;\n    }\n    if (!isApproved) {\n      return;\n    }\n    if (fee === '') {\n      return;\n    }\n    try {\n      const gasPrice = await library.getGasPrice();\n\n      const tokenAmount = parseAmount(amount, token.decimals);\n      if (isEth(token, chainId)) {\n        const gasRes = await bep20TransferContract.estimateGas.transferEth(toAddressList, tokenAmount, {\n          value: accAdd(allAmount, fee),\n        });\n        const allFee = accAdd(accMul(gasPrice.toString(), gasRes.toString()), fee);\n        setAllFee(allFee);\n      } else {\n        const gasRes = await bep20TransferContract.estimateGas.transferToken(token.address, toAddressList, tokenAmount, {\n          value: fee,\n        });\n        const allFee = accAdd(accMul(gasPrice.toString(), gasRes.toString()), fee);\n        setAllFee(allFee);\n      }\n      setErrorMessage('');\n    } catch (callError: any) {\n      setAllFee(fee);\n      setErrorMessage(callError.error?.message || callError.reason || callError.data?.message || callError.message);\n    }\n  };\n\n  useEffect(() => {\n    getTransferFee();\n  }, [account, isApproved, fee, toAddressList]);\n\n  return { allFee, errorMessage };\n};\n\nexport const useProTransferGasFee = ({ token, isApproved, toAddressList, allAmount, fee, tokenAmountList }: TransferGasFee) => {\n  const { account, chainId, library } = useActiveWeb3React();\n  const [allFee, setAllFee] = useState<string>('0');\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const bep20TransferContract = useBep20TransferContract();\n  const getTransferFee = async () => {\n    if (!account) {\n      return;\n    }\n    if (!isApproved) {\n      return;\n    }\n    if (fee === '') {\n      return;\n    }\n    try {\n      const gasPrice = await library.getGasPrice();\n\n      if (isEth(token, chainId)) {\n        const gasRes = await bep20TransferContract.estimateGas.transferProEth(toAddressList, tokenAmountList, {\n          value: accAdd(allAmount, fee),\n        });\n        const allFee = accAdd(accMul(gasPrice.toString(), gasRes.toString()), fee);\n        setAllFee(allFee);\n      } else {\n        const gasRes = await bep20TransferContract.estimateGas.transferProToken(token.address, toAddressList, tokenAmountList, {\n          value: fee,\n        });\n        const gasFee = ethers.utils.parseUnits(gasRes.toString(), 'gwei').toString();\n        const allFee = accAdd(accMul(gasPrice.toString(), gasRes.toString()), fee);\n        setAllFee(allFee);\n      }\n      setErrorMessage('');\n    } catch (callError: any) {\n      setErrorMessage(callError.error?.message || callError.reason || callError.data?.message || callError.message);\n    }\n  };\n\n  useEffect(() => {\n    getTransferFee();\n  }, [account, isApproved, fee, toAddressList]);\n\n  return { allFee, errorMessage };\n};\n\ninterface Erc20Info {\n  address: string;\n  tokenList: Token[];\n  searchValue: string;\n  setTokenList: (tokenList: Token[]) => void;\n}\nexport const useErc20Info = ({ address, tokenList, searchValue, setTokenList }: Erc20Info) => {\n  const { chainId } = useActiveWeb3React();\n\n  const bep20Contract = useERC20(address, false);\n\n  const getErc20Info = async () => {\n    if (bep20Contract as Erc20) {\n      try {\n        const index = tokenList.findIndex((item) => item.address == isAddress(searchValue));\n        if (index !== -1) {\n          return;\n        }\n        const symbol = await bep20Contract.symbol();\n        const name = await bep20Contract.name();\n        const decimals = await bep20Contract.decimals();\n        const token = { symbol, name, decimals: decimals.toString(), address, chainId };\n        setTokenList([...tokenList, token]);\n      } catch (e) {\n        // setTokenList(tokenList);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getErc20Info();\n  }, [searchValue, tokenList, bep20Contract]);\n\n  return;\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Button, Select, Input, Slider, Table, message } from 'antd';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { useERC20, useBep20TransferContract } from '../hooks/useContract';\nimport { formatAmount, accMul, parseAmount, accGt, accAdd, toFixed } from '@/utils/formatBalance';\nimport { getMultiTransferAddress } from '@/utils/addressHelpers';\nimport { MaxUint256 } from '@ethersproject/constants';\nimport DEFAULT_TOKEN_LIST from '@/config/tokens';\nimport { Token } from '@/config/constants/types';\nimport { isEth } from '@/utils/isEth';\nimport { NATIVE } from '@/config/constants/native';\nimport useActiveWeb3React from '@/hooks/useActiveWeb3React';\nimport { isAddress, isAddressSimple } from '@/utils/address';\nimport { Erc20 } from '@/config/abi/types';\nimport { Link } from 'react-router-dom';\nimport { ethers } from 'ethers';\nimport { useBalance, useAllowance, useTransferFee, useTransferGasFee } from '@/hooks/useBatchTransfer';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\ninterface ISetInfo {\n  amount: string;\n  token: Token;\n  addressList: string[];\n  addressInput: string;\n  tokenList: Token[];\n  setAmount: (amount: string) => void;\n  setToken: (token: Token) => void;\n  setAddressList: (addressList: string[]) => void;\n  setStep: (step: number) => void;\n  setTokenList: (tokenList: Token[]) => void;\n  setAddressInput?: (addressInput: string) => void;\n}\ninterface ITransferDetail {\n  amount: string;\n  token: Token;\n  addressList: string[];\n  setAddressList: (addressList: string[]) => void;\n  setStep: (step: number) => void;\n  setAddressInput?: (addressInput: string) => void;\n}\nfunction SetInfo(prop: ISetInfo) {\n  const { account, chainId } = useActiveWeb3React();\n  const { amount, addressList, token, setAmount, setToken, tokenList, addressInput, setAddressInput, setTokenList, setAddressList, setStep } = prop;\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const address = useMemo(() => {\n    return isAddress(searchValue) ? searchValue : '';\n  }, [searchValue]);\n\n  const bep20Contract = useERC20(address, false);\n\n  useEffect(() => {\n    const getErc20Info = async () => {\n      if (bep20Contract as Erc20) {\n        try {\n          const index = tokenList.findIndex((item) => item.address === isAddress(searchValue));\n          if (index !== -1) {\n            return;\n          }\n          const symbol = await bep20Contract.symbol();\n          const name = await bep20Contract.name();\n          const decimals = await bep20Contract.decimals();\n          const token = { symbol, name, decimals: decimals.toString(), address, chainId };\n          setTokenList([...tokenList, token]);\n        } catch (e) {\n          //\n        }\n      }\n    };\n    getErc20Info();\n  }, [bep20Contract]);\n\n  const errAddressList = useMemo(() => {\n    const err = [];\n    addressList.forEach((item, index) => {\n      if (isAddress(item) !== item && item !== '') {\n        err.push({ address: item, index });\n      }\n    });\n    return err.length ? (\n      <div className=\"border rounded-md border-red-500 text-red-500 mt-4 px-4 py-2\">\n        {err.map((item) => {\n          return (\n            <div key={item.index} className=\"\">\n              <div>\n                第{item.index + 1}行 {item.address} 不是一个有效的钱包地址\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    ) : null;\n  }, [addressList]);\n\n  return (\n    <div>\n      <div className=\"flex text-primary \">\n        <div className=\"flex-1  overflow-hidden\">\n          <div className=\"text-primary font-bold py-4\">选择代币</div>\n          <Select\n            bordered={false}\n            size=\"large\"\n            showSearch\n            optionLabelProp=\"children\"\n            dropdownClassName=\"flex-1 px-4\"\n            filterOption={(e, currentItem) => {\n              const token = tokenList.find((item) => item.address === currentItem.value);\n              const searchValue = e.toLocaleLowerCase();\n              if (\n                token.symbol.toLocaleLowerCase().includes(searchValue) ||\n                token.name.toLocaleLowerCase().includes(searchValue) ||\n                token.address.toLocaleLowerCase().includes(searchValue)\n              ) {\n                return true;\n              }\n              return false;\n            }}\n            onSearch={(e) => {\n              setSearchValue(e);\n            }}\n            placeholder=\"请选择\"\n            value={{ value: token.address }}\n            className=\"bg-gray-100 w-full\"\n            onChange={(address: any) => {\n              setToken(tokenList.find((item) => item.address === address));\n            }}\n          >\n            {tokenList.length &&\n              tokenList.map((item, index) => {\n                return (\n                  <Option key={item.address + item.name + item.symbol} value={item.address}>\n                    <div className=\"\">\n                      <span className=\"token-symbol\">{item.symbol}</span> <span className=\"char\">-</span>\n                      {item.address ? item.address : item.name}\n                    </div>\n                  </Option>\n                );\n              })}\n          </Select>\n        </div>\n        <div className=\"w-16 ml-4\">\n          <div className=\"py-4 font-bold\">位数</div>\n          <div className=\"p-2 text-base bg-gray-100\">{token.decimals}</div>\n        </div>\n      </div>\n      <div>\n        <div className=\"py-4 font-bold\">收币地址</div>\n        <div className=\"flex bg-gray-100 text-sm\">\n          <div className=\"py-1 px-4\"> {addressList.length ? addressList.map((item, index) => <div key={index}>{index + 1}</div>) : 1}</div>\n          <TextArea\n            className=\"text-sm\"\n            bordered={false}\n            value={addressInput}\n            onChange={(e) => {\n              setAddressInput(e.target.value);\n              if (e.target.value == '') {\n                setAddressList([]);\n                return;\n              }\n              const addressList = e.target.value.split('\\n');\n              setAddressList(addressList);\n            }}\n            rows={4}\n          />\n        </div>\n      </div>\n      {errAddressList}\n\n      <div className=\"\">\n        <div className=\"my-4 flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <div className=\"mr-4  font-bold\">每个地址发送</div>\n            <Input\n              value={amount}\n              onChange={(e) => {\n                setAmount(e.target.value);\n              }}\n              className=\"bg-gray-100\"\n              style={{ width: '100px' }}\n              bordered={false}\n            />\n            <div className=\"ml-2 font-bold\">{token.symbol}</div>\n          </div>\n          <div\n            className=\"text-gray-400 cursor-pointer\"\n            style={{ height: '30px' }}\n            onClick={() => {\n              setAddressInput('0x742606C36817f6BeB1eD806838E57217260dF9F3');\n              setAddressList(['0x742606C36817f6BeB1eD806838E57217260dF9F3']);\n            }}\n          >\n            查看例子\n          </div>\n        </div>\n        <div>\n          给每个地址发送不同数量? 使用\n          <Link to=\"/pro\">\n            <span className=\"text-green-500 font-bold cursor-pointer\"> 专业版</span>\n          </Link>\n        </div>\n      </div>\n\n      <Button\n        type=\"primary\"\n        className=\"mt-4\"\n        onClick={() => {\n          if (!account) {\n            message.error('请先连接钱包');\n            return;\n          }\n          setStep(1);\n        }}\n      >\n        下一步\n      </Button>\n    </div>\n  );\n}\n\nfunction TransferDetail(prop: ITransferDetail) {\n  const { account, chainId } = useActiveWeb3React();\n  const { amount, addressList, token, setAddressList, setAddressInput, setStep } = prop;\n\n  const { allAmount, tableList, toAddressList } = useMemo(() => {\n    const filterInput = addressList.filter((item) => {\n      return item !== '';\n    });\n    let allAmount = '0';\n    const toAddressList = [];\n    const tableList = [];\n    filterInput.forEach((item, index) => {\n      toAddressList.push(item);\n      tableList.push({ to: item, amount, ...token, key: index });\n    });\n    allAmount = accMul(parseAmount(amount, token.decimals), toAddressList.length);\n    return { allAmount, tableList, toAddressList };\n  }, [addressList]);\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const { fee } = useTransferFee();\n  const { isApproved, getAllowance } = useAllowance(token, account, getMultiTransferAddress(chainId));\n  const { bnbBalance, tokenBalance, getBalance } = useBalance(token, account);\n  const { allFee, errorMessage } = useTransferGasFee({ token, isApproved, amount, toAddressList, allAmount, fee });\n  const bep20Contract = useERC20(token.address);\n  const bep20TransferContract = useBep20TransferContract();\n  const columns = [\n    {\n      title: '钱包地址',\n      dataIndex: 'to',\n      key: 'to',\n    },\n    {\n      title: '数量',\n      dataIndex: 'amount',\n      key: 'amount',\n      width: '20%',\n      render: (amount: any, record: any) => (\n        <div>\n          {amount} {record.symbol}\n        </div>\n      ),\n    },\n    {\n      width: '20%',\n      title: '操作',\n      key: 'action',\n      render: (text: any, record: any) => (\n        <Button\n          danger\n          onClick={() => {\n            const _addressList = [...addressList];\n            _addressList.splice(record.key, 1);\n            setAddressList(_addressList);\n            setAddressInput(_addressList.join('\\n'));\n          }}\n        >\n          移除\n        </Button>\n      ),\n    },\n  ];\n  return (\n    <div>\n      <div className=\"overflow-x-hidden\">\n        <div className=\"py-4 font-bold\">地址列表</div>\n        <Table columns={columns} dataSource={tableList} pagination={false} scroll={{ y: 300 }} />\n      </div>\n      <div>\n        <div className=\"py-4 font-bold\">摘要</div>\n        <div className=\"bg-gray-100 flex flex-wrap \">\n          <div className=\"w-3/6 p-4\">\n            <div>{tableList.length}</div>\n            <div>地址总数</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {toFixed(formatAmount(allAmount, token.decimals), 6)} {token.symbol}\n            </div>\n            <div>代币发送总数</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>{tableList.length}</div>\n            <div>交易总数</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {toFixed(formatAmount(tokenBalance, token.decimals), 6)} {token.symbol}\n            </div>\n            <div>代币余额</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {formatAmount(allFee)} {NATIVE[chainId]?.symbol}\n            </div>\n            预估手续费(含额外手续费 {formatAmount(fee)} {NATIVE[chainId]?.symbol})\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {toFixed(formatAmount(bnbBalance), 6)} {NATIVE[chainId]?.symbol}\n            </div>\n            <div>您的余额</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"text-red-400\">{errorMessage}</div>\n      <div className=\"flex mt-4\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setStep(0);\n          }}\n          className=\"mr-4\"\n          icon={<ArrowLeftOutlined />}\n        />\n\n        {isApproved ? (\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={async () => {\n              try {\n                let tx;\n                setLoading(true);\n                const tokenAmount = parseAmount(amount, token.decimals);\n                if (isEth(token, chainId)) {\n                  tx = await bep20TransferContract.transferEth(toAddressList, tokenAmount.toString(), {\n                    value: accAdd(allAmount, fee),\n                  });\n                } else {\n                  tx = await bep20TransferContract.transferToken(token.address, toAddressList, tokenAmount.toString(), {\n                    value: fee,\n                  });\n                }\n                await tx.wait();\n                setLoading(false);\n                getBalance();\n                message.success('转账成功');\n                setTimeout(() => {\n                  history.go();\n                }, 0);\n              } catch (callError: any) {\n                message.error(callError.reason || callError.data?.message || callError.message);\n                setLoading(false);\n              }\n            }}\n          >\n            发送\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={async () => {\n              try {\n                setLoading(true);\n                const tx = await bep20Contract.approve(getMultiTransferAddress(chainId), MaxUint256);\n                const receipt = await tx.wait();\n                setLoading(false);\n                getAllowance();\n                getBalance();\n                message.success('授权成功');\n              } catch (callError: any) {\n                message.error(callError.reason || callError.data?.message || callError.message);\n                setLoading(false);\n              }\n            }}\n          >\n            授权\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default function BatchTransfer() {\n  const { chainId } = useActiveWeb3React();\n  const [setp, setStep] = useState<number>(0);\n  const [amount, setAmount] = useState<string>('1');\n  const [addressList, setAddressList] = useState<string[]>([]);\n  const [addressInput, setAddressInput] = useState<string>('');\n  const [token, setToken] = useState<Token>({ address: '', name: '', symbol: '', decimals: 18, chainId });\n  const [tokenList, setTokenList] = useState<Token[]>([]);\n\n  const handleAmount = (amount: string) => {\n    setAmount(amount);\n  };\n  const handleToken = (token: Token) => {\n    setToken(token);\n  };\n  const handleAddressList = (addressList: string[]) => {\n    setAddressList(addressList);\n  };\n\n  const handleTokenList = (tokenList: Token[]) => {\n    setTokenList(tokenList);\n  };\n  const handleStep = (step: number) => {\n    setStep(step);\n  };\n  const handleAddressInput = (addressInput: string) => {\n    setAddressInput(addressInput);\n  };\n\n  useEffect(() => {\n    setStep(0);\n    if (DEFAULT_TOKEN_LIST[chainId]) {\n      let _tokenList = [...DEFAULT_TOKEN_LIST[chainId]];\n      _tokenList.sort((t1, t2) => {\n        return t1.symbol.toLowerCase() < t2.symbol.toLowerCase() ? -1 : 1;\n      });\n      _tokenList = [NATIVE[chainId], ..._tokenList];\n      setTokenList(_tokenList);\n      setToken(NATIVE[chainId]);\n    } else {\n      setTokenList([]);\n      setToken({ address: '', name: '', symbol: '', decimals: 18, chainId: chainId });\n    }\n  }, [chainId]);\n  return (\n    <div className=\"text-primary bg-white mx-auto max-w-900  p-4 my-6\" style={{ width: '90%' }}>\n      <div className=\"text-red-500\">本批量转账仅支持BSC,BSC-TEST,RINKEBY,KOVAN网络</div>\n      <div className=\"text-red-500\">支持自定义币种转账 输入合约地址即可 </div>\n      <div className=\"text-red-500\"> 无额外手续费</div>\n      <div className=\"text-red-500 mb-4\"> 新增 Pro 版本，支持多地址 多数量 批量转账</div>\n      <div className=\"text-base text-primary font-bold\">批量发送代币</div>\n      {setp == 0 ? (\n        <SetInfo\n          amount={amount}\n          token={token}\n          tokenList={tokenList}\n          addressList={addressList}\n          addressInput={addressInput}\n          setAddressInput={handleAddressInput}\n          setAmount={handleAmount}\n          setToken={handleToken}\n          setAddressList={handleAddressList}\n          setTokenList={handleTokenList}\n          setStep={handleStep}\n        />\n      ) : (\n        <TransferDetail\n          amount={amount}\n          token={token}\n          addressList={addressList}\n          setAddressInput={handleAddressInput}\n          setAddressList={handleAddressList}\n          setStep={handleStep}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Button, Select, Input, Table, message } from 'antd';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { useERC20, useBep20TransferContract } from '../hooks/useContract';\nimport { formatAmount, accAdd, accGt, toFixed, parseAmount } from '@/utils/formatBalance';\n\nimport { getMultiTransferAddress } from '@/utils/addressHelpers';\nimport { MaxUint256 } from '@ethersproject/constants';\nimport DEFAULT_TOKEN_LIST from '@/config/tokens';\nimport { Token } from '@/config/constants/types';\nimport { isEth } from '@/utils/isEth';\nimport { NATIVE } from '@/config/constants/native';\nimport useActiveWeb3React from '@/hooks/useActiveWeb3React';\nimport { isAddress, isAddressSimple } from '@/utils/address';\nimport { Erc20 } from '@/config/abi/types';\nimport { Link } from 'react-router-dom';\nimport { checkNumber } from '@/utils/number';\nimport { Contract } from '@ethersproject/contracts';\nimport { ethers } from 'ethers';\nimport { useAllowance, useBalance, useProTransferGasFee, useTransferFee, useTransferGasFee } from '@/hooks/useBatchTransfer';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\ninterface ISetInfo {\n  token: Token;\n  addressList: string[];\n  addressInput: string;\n  tokenList: Token[];\n  setToken: (token: Token) => void;\n  setAddressList: (addressList: string[]) => void;\n  setStep: (step: number) => void;\n  setTokenList: (tokenList: Token[]) => void;\n  setAddressInput?: (addressInput: string) => void;\n}\ninterface ITransferDetail {\n  token: Token;\n  addressList: string[];\n  setAddressList: (addressList: string[]) => void;\n  setStep: (step: number) => void;\n  setAddressInput?: (addressInput: string) => void;\n}\nfunction SetInfo(prop: ISetInfo) {\n  const { account, chainId } = useActiveWeb3React();\n  const { addressList, token, setToken, tokenList, addressInput, setAddressInput, setTokenList, setAddressList, setStep } = prop;\n\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const address = useMemo(() => {\n    return isAddress(searchValue) ? searchValue : '';\n  }, [searchValue]);\n\n  const bep20Contract = useERC20(address, false);\n\n  useEffect(() => {\n    const getErc20Info = async () => {\n      if (bep20Contract as Erc20) {\n        try {\n          const index = tokenList.findIndex((item) => item.address === isAddress(searchValue));\n          if (index !== -1) {\n            return;\n          }\n          const symbol = await bep20Contract.symbol();\n          const name = await bep20Contract.name();\n          const decimals = await bep20Contract.decimals();\n          const token = { symbol, name, decimals: decimals.toString(), address, chainId };\n          setTokenList([...tokenList, token]);\n        } catch (e) {\n          // setTokenList(tokenList);\n        }\n      }\n    };\n    getErc20Info();\n  }, [bep20Contract]);\n\n  const errAddressList = useMemo(() => {\n    const err = [];\n    addressList.forEach((item, index) => {\n      try {\n        const address = item.split(',')[0];\n        const amount = item.split(',')[1];\n        if (item == '') {\n          return;\n        }\n        if ((isAddressSimple(address) === false && address !== '') || !checkNumber(amount)) {\n          err.push({ address: item, index });\n        }\n      } catch (e) {\n        err.push({ address: item, index });\n      }\n    });\n    return err.length ? (\n      <div className=\"border rounded-md border-red-500 text-red-500 mt-4 px-4 py-2\">\n        {err.map((item) => {\n          return (\n            <div key={item.index} className=\"\">\n              <div>\n                第{item.index + 1}行 {item.address} 不是一个有效的钱包地址或者数量有问题\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    ) : null;\n  }, [addressList]);\n\n  return (\n    <div>\n      <div className=\"flex text-primary \">\n        <div className=\"flex-1  overflow-hidden\">\n          <div className=\"text-primary font-bold py-4\">选择代币</div>\n          <Select\n            bordered={false}\n            size=\"large\"\n            showSearch\n            optionLabelProp=\"children\"\n            dropdownClassName=\"flex-1 px-4\"\n            filterOption={(e, currentItem) => {\n              const token = tokenList.find((item) => item.address === currentItem.value);\n              const searchValue = e.toLocaleLowerCase();\n              if (\n                token.symbol.toLocaleLowerCase().includes(searchValue) ||\n                token.name.toLocaleLowerCase().includes(searchValue) ||\n                token.address.toLocaleLowerCase().includes(searchValue)\n              ) {\n                return true;\n              }\n              return false;\n            }}\n            onSearch={(e) => {\n              setSearchValue(e);\n            }}\n            placeholder=\"请选择\"\n            value={{ value: token.address }}\n            className=\"bg-gray-100 w-full\"\n            onChange={(address: any) => {\n              setToken(tokenList.find((item) => item.address === address));\n            }}\n          >\n            {tokenList.length &&\n              tokenList.map((item, index) => {\n                return (\n                  <Option key={item.address + item.name + item.symbol} value={item.address}>\n                    <div className=\"\">\n                      <span className=\"token-symbol\">{item.symbol}</span> <span className=\"char\">-</span>\n                      {item.address ? item.address : item.name}\n                    </div>\n                  </Option>\n                );\n              })}\n          </Select>\n        </div>\n        <div className=\"w-16 ml-4\">\n          <div className=\"py-4 font-bold\">位数</div>\n          <div className=\"p-2 text-base bg-gray-100\">{token.decimals}</div>\n        </div>\n      </div>\n      <div>\n        <div className=\"py-4 font-bold\">收币地址</div>\n        <div className=\"flex bg-gray-100 text-sm\">\n          <div className=\"py-1 px-4\">{addressList.length ? addressList.map((item, index) => <div key={index}>{index + 1}</div>) : 1}</div>\n          <TextArea\n            className=\"text-sm\"\n            bordered={false}\n            value={addressInput}\n            onChange={(e) => {\n              setAddressInput(e.target.value);\n              if (e.target.value == '') {\n                setAddressList([]);\n                return;\n              }\n              const addressList = e.target.value.split('\\n');\n              setAddressList(addressList);\n            }}\n            rows={4}\n          />\n        </div>\n      </div>\n      {errAddressList}\n\n      <div className=\"\">\n        <div className=\"my-4 flex justify-between items-center\">\n          <div className=\"flex items-center\"></div>\n          <div\n            className=\"text-gray-400 cursor-pointer\"\n            style={{ height: '30px' }}\n            onClick={() => {\n              setAddressInput('0x742606C36817f6BeB1eD806838E57217260dF9F3,0.1\\n0x86Af7b8f32B7979F48B66343F96Ed1F8A35F97E5,0.2');\n              setAddressList(['0x742606C36817f6BeB1eD806838E57217260dF9F3,0.1', '0x86Af7b8f32B7979F48B66343F96Ed1F8A35F97E5,0.2']);\n            }}\n          >\n            查看例子\n          </div>\n        </div>\n        <div>\n          返回使用\n          <Link to=\"/\">\n            <span className=\"text-green-500 font-bold cursor-pointer\"> 普通版</span>\n          </Link>\n        </div>\n      </div>\n\n      <Button\n        type=\"primary\"\n        className=\"mt-4\"\n        onClick={() => {\n          if (!account) {\n            message.error('请先连接钱包');\n            return;\n          }\n          setStep(1);\n        }}\n      >\n        下一步\n      </Button>\n    </div>\n  );\n}\n\nfunction TransferDetail(prop: ITransferDetail) {\n  const { account, chainId } = useActiveWeb3React();\n  const { addressList, token, setAddressList, setAddressInput, setStep } = prop;\n\n  // 获取转账数量数组 获取转账总数量\n  const { tokenAmountList, allAmount, tableList, toAddressList } = useMemo(() => {\n    const filterInput = addressList.filter((item) => {\n      return item !== '';\n    });\n    let allAmount = '0';\n    const toAddressList = [];\n    const tokenAmountList = [];\n    const tableList = [];\n    filterInput.forEach((item, index) => {\n      const arr = item.split(',');\n      const to = arr[0];\n      const amount = parseFloat(arr[1]).toString();\n      toAddressList.push(to);\n      const tokenAmount = parseAmount(amount, token.decimals);\n      tokenAmountList.push(tokenAmount.toString());\n      allAmount = accAdd(allAmount, tokenAmount);\n      tableList.push({ to, amount, ...token, key: index });\n    });\n\n    return { tokenAmountList, allAmount, tableList, toAddressList };\n  }, [addressList]);\n\n  const { isApproved, getAllowance } = useAllowance(token, account, getMultiTransferAddress(chainId));\n  const { bnbBalance, tokenBalance, getBalance } = useBalance(token, account);\n  const { fee } = useTransferFee();\n  const { allFee, errorMessage } = useProTransferGasFee({ token, isApproved, tokenAmountList, toAddressList, allAmount, fee });\n  const [loading, setLoading] = useState<boolean>(false);\n  const bep20Contract = useERC20(token.address);\n  const bep20TransferContract = useBep20TransferContract();\n\n  const columns = [\n    {\n      title: '钱包地址',\n      dataIndex: 'to',\n      key: 'to',\n    },\n    {\n      title: '数量',\n      dataIndex: 'amount',\n      key: 'amount',\n      width: '20%',\n      render: (amount: any, record: any) => (\n        <div>\n          {amount} {record.symbol}\n        </div>\n      ),\n    },\n    {\n      width: '20%',\n      title: '操作',\n      key: 'action',\n      render: (text: any, record: any) => (\n        <Button\n          danger\n          onClick={() => {\n            const _addressList = [...addressList];\n            _addressList.splice(record.key, 1);\n            setAddressList(_addressList);\n            setAddressInput(_addressList.join('\\n'));\n          }}\n        >\n          移除\n        </Button>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <div className=\"overflow-x-hidden\">\n        <div className=\"py-4 font-bold\">地址列表</div>\n        <Table columns={columns} dataSource={tableList} pagination={false} scroll={{ y: 300 }} />\n      </div>\n      <div>\n        <div className=\"py-4 font-bold\">摘要</div>\n        <div className=\"bg-gray-100 flex flex-wrap \">\n          <div className=\"w-3/6 p-4\">\n            <div>{tableList.length}</div>\n            <div>地址总数</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {toFixed(formatAmount(allAmount, token.decimals), 6)} {token.symbol}\n            </div>\n            <div>代币发送总数</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>{tableList.length}</div>\n            <div>交易总数</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {toFixed(formatAmount(tokenBalance, token.decimals), 6)} {token.symbol}\n            </div>\n            <div>代币余额</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {formatAmount(allFee)} {NATIVE[chainId]?.symbol}\n            </div>\n            <div>\n              预估手续费(含额外手续费 {formatAmount(fee)} {NATIVE[chainId]?.symbol})\n            </div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {toFixed(formatAmount(bnbBalance), 6)} {NATIVE[chainId]?.symbol}\n            </div>\n            <div>您的余额</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"text-red-400\">{errorMessage}</div>\n      <div className=\"flex mt-4\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setStep(0);\n          }}\n          className=\"mr-4\"\n          icon={<ArrowLeftOutlined />}\n        />\n\n        {isApproved ? (\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={async () => {\n              try {\n                let tx;\n                setLoading(true);\n                if (isEth(token, chainId)) {\n                  tx = await bep20TransferContract.transferProEth(toAddressList, tokenAmountList, {\n                    value: accAdd(allAmount, fee),\n                  });\n                } else {\n                  tx = await bep20TransferContract.transferProToken(token.address, toAddressList, tokenAmountList, {\n                    value: fee,\n                  });\n                }\n                await tx.wait();\n                setLoading(false);\n                getBalance();\n                message.success('转账成功');\n                setTimeout(() => {\n                  history.go();\n                }, 0);\n              } catch (callError: any) {\n                message.error(callError.reason || callError.data?.message || callError.message);\n                setLoading(false);\n              }\n            }}\n          >\n            发送\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={async () => {\n              try {\n                setLoading(true);\n                const tx = await bep20Contract.approve(getMultiTransferAddress(chainId), MaxUint256);\n                const receipt = await tx.wait();\n                setLoading(false);\n                getAllowance();\n                getBalance();\n                message.success('授权成功');\n              } catch (callError: any) {\n                message.error(callError.reason || callError.data?.message || callError.message);\n                setLoading(false);\n              }\n            }}\n          >\n            授权\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default function BatchTransfer() {\n  const { chainId } = useActiveWeb3React();\n  const [setp, setStep] = useState<number>(0);\n  const [addressList, setAddressList] = useState<string[]>([]);\n  const [addressInput, setAddressInput] = useState<string>('');\n  const [token, setToken] = useState<Token>({ address: '', name: '', symbol: '', decimals: 18, chainId });\n  const [tokenList, setTokenList] = useState<Token[]>([]);\n\n  const handleToken = (token: Token) => {\n    setToken(token);\n  };\n  const handleAddressList = (addressList: string[]) => {\n    setAddressList(addressList);\n  };\n\n  const handleTokenList = (tokenList: Token[]) => {\n    setTokenList(tokenList);\n  };\n  const handleStep = (step: number) => {\n    setStep(step);\n  };\n  const handleAddressInput = (addressInput: string) => {\n    setAddressInput(addressInput);\n  };\n\n  useEffect(() => {\n    setStep(0);\n    if (DEFAULT_TOKEN_LIST[chainId]) {\n      let _tokenList = [...DEFAULT_TOKEN_LIST[chainId]];\n      _tokenList.sort((t1, t2) => {\n        return t1.symbol.toLowerCase() < t2.symbol.toLowerCase() ? -1 : 1;\n      });\n      _tokenList = [NATIVE[chainId], ..._tokenList];\n      setTokenList(_tokenList);\n      setToken(NATIVE[chainId]);\n    } else {\n      setTokenList([]);\n      setToken({ address: '', name: '', symbol: '', decimals: 18, chainId: chainId });\n    }\n  }, [chainId]);\n  return (\n    <div className=\"text-primary bg-white mx-auto max-w-900  p-4 my-6\" style={{ width: '90%' }}>\n      <div className=\"text-red-500\">本批量转账仅支持BSC,BSC-TEST,RINKEBY,KOVAN网络</div>\n      <div className=\"text-red-500\">支持自定义币种转账 输入合约地址即可 </div>\n      <div className=\"text-red-500\"> 无额外手续费</div>\n      <div className=\"text-red-500 mb-4\"> 新增 Pro 版本，支持多地址 多数量 批量转账</div>\n      <div className=\"text-base text-primary font-bold\">批量发送代币</div>\n      {setp == 0 ? (\n        <SetInfo\n          token={token}\n          tokenList={tokenList}\n          addressList={addressList}\n          addressInput={addressInput}\n          setAddressInput={handleAddressInput}\n          setToken={handleToken}\n          setAddressList={handleAddressList}\n          setTokenList={handleTokenList}\n          setStep={handleStep}\n        />\n      ) : (\n        <TransferDetail\n          token={token}\n          addressList={addressList}\n          setAddressInput={handleAddressInput}\n          setAddressList={handleAddressList}\n          setStep={handleStep}\n        />\n      )}\n    </div>\n  );\n}\n","export function checkNumber(value) {\n  const re = /^[0-9]+.?[0-9]*$/; //判断字符串是否为数字     //判断正整数 /^[1-9]+[0-9]*]*$/\n  if (!re.test(value)) {\n    return false;\n  }\n  return true;\n}\n","import React from 'react';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { POLLING_INTERVAL } from './dapp/connectors';\nimport Header from './components/Header';\n\nimport BatchTransfer from './page/BatchTransfer';\nimport ProBatchTransfer from './page/ProBatchTransfer';\n\nimport './App.css';\nexport function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = POLLING_INTERVAL;\n  return library;\n}\n\nexport default function APP() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <div className=\"App flex flex-col\">\n        <Router>\n          <Header></Header>\n          <Switch>\n            <Route path=\"/\" exact component={BatchTransfer} />\n            <Route path=\"/pro\" component={ProBatchTransfer} />\n          </Switch>\n        </Router>\n      </div>\n    </Web3ReactProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}